
Timer_Encoder.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000014d0  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c4  08001600  08001600  00011600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016c4  080016c4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080016c4  080016c4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016c4  080016c4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016c4  080016c4  000116c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016c8  080016c8  000116c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080016cc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000064  08001730  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000098  08001730  00020098  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000010c2  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000057d  00000000  00000000  0002114f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000178  00000000  00000000  000216d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000120  00000000  00000000  00021848  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00011ea4  00000000  00000000  00021968  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002240  00000000  00000000  0003380c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00059c97  00000000  00000000  00035a4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0008f6e3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000cb4  00000000  00000000  0008f734  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000064 	.word	0x20000064
 800014c:	00000000 	.word	0x00000000
 8000150:	080015e8 	.word	0x080015e8

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000068 	.word	0x20000068
 800016c:	080015e8 	.word	0x080015e8

08000170 <encoder_init>:

#include "encoder.h"
#include "stm32f1xx.h"

void encoder_init(uint16_t max_value)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
 8000176:	4603      	mov	r3, r0
 8000178:	80fb      	strh	r3, [r7, #6]
	RCC->APB2ENR|=RCC_APB2ENR_IOPAEN;
 800017a:	4b35      	ldr	r3, [pc, #212]	; (8000250 <encoder_init+0xe0>)
 800017c:	699b      	ldr	r3, [r3, #24]
 800017e:	4a34      	ldr	r2, [pc, #208]	; (8000250 <encoder_init+0xe0>)
 8000180:	f043 0304 	orr.w	r3, r3, #4
 8000184:	6193      	str	r3, [r2, #24]

	/*Configure PA0 as Output Alternate Push/Pull */
	GPIOA->CRL&=~GPIO_CRL_MODE0;
 8000186:	4b33      	ldr	r3, [pc, #204]	; (8000254 <encoder_init+0xe4>)
 8000188:	681b      	ldr	r3, [r3, #0]
 800018a:	4a32      	ldr	r2, [pc, #200]	; (8000254 <encoder_init+0xe4>)
 800018c:	f023 0303 	bic.w	r3, r3, #3
 8000190:	6013      	str	r3, [r2, #0]
	GPIOA->CRL|=(GPIO_CRL_CNF0_0);
 8000192:	4b30      	ldr	r3, [pc, #192]	; (8000254 <encoder_init+0xe4>)
 8000194:	681b      	ldr	r3, [r3, #0]
 8000196:	4a2f      	ldr	r2, [pc, #188]	; (8000254 <encoder_init+0xe4>)
 8000198:	f043 0304 	orr.w	r3, r3, #4
 800019c:	6013      	str	r3, [r2, #0]
	GPIOA->CRL&=~(GPIO_CRL_CNF0_1);
 800019e:	4b2d      	ldr	r3, [pc, #180]	; (8000254 <encoder_init+0xe4>)
 80001a0:	681b      	ldr	r3, [r3, #0]
 80001a2:	4a2c      	ldr	r2, [pc, #176]	; (8000254 <encoder_init+0xe4>)
 80001a4:	f023 0308 	bic.w	r3, r3, #8
 80001a8:	6013      	str	r3, [r2, #0]

	/*Configure PA1 as Output Alternate Push/Pull*/

	GPIOA->CRL&=~GPIO_CRL_MODE1;
 80001aa:	4b2a      	ldr	r3, [pc, #168]	; (8000254 <encoder_init+0xe4>)
 80001ac:	681b      	ldr	r3, [r3, #0]
 80001ae:	4a29      	ldr	r2, [pc, #164]	; (8000254 <encoder_init+0xe4>)
 80001b0:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 80001b4:	6013      	str	r3, [r2, #0]
	GPIOA->CRL|=(GPIO_CRL_CNF1_0);
 80001b6:	4b27      	ldr	r3, [pc, #156]	; (8000254 <encoder_init+0xe4>)
 80001b8:	681b      	ldr	r3, [r3, #0]
 80001ba:	4a26      	ldr	r2, [pc, #152]	; (8000254 <encoder_init+0xe4>)
 80001bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80001c0:	6013      	str	r3, [r2, #0]
	GPIOA->CRL&=~(GPIO_CRL_CNF1_1);
 80001c2:	4b24      	ldr	r3, [pc, #144]	; (8000254 <encoder_init+0xe4>)
 80001c4:	681b      	ldr	r3, [r3, #0]
 80001c6:	4a23      	ldr	r2, [pc, #140]	; (8000254 <encoder_init+0xe4>)
 80001c8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80001cc:	6013      	str	r3, [r2, #0]

	/*Don't remap the pin*/
	AFIO->MAPR&=~AFIO_MAPR_TIM2_REMAP;
 80001ce:	4b22      	ldr	r3, [pc, #136]	; (8000258 <encoder_init+0xe8>)
 80001d0:	685b      	ldr	r3, [r3, #4]
 80001d2:	4a21      	ldr	r2, [pc, #132]	; (8000258 <encoder_init+0xe8>)
 80001d4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80001d8:	6053      	str	r3, [r2, #4]


	/*Enable clock access to timer2*/
	RCC->APB1ENR|=RCC_APB1ENR_TIM2EN;
 80001da:	4b1d      	ldr	r3, [pc, #116]	; (8000250 <encoder_init+0xe0>)
 80001dc:	69db      	ldr	r3, [r3, #28]
 80001de:	4a1c      	ldr	r2, [pc, #112]	; (8000250 <encoder_init+0xe0>)
 80001e0:	f043 0301 	orr.w	r3, r3, #1
 80001e4:	61d3      	str	r3, [r2, #28]

	/*Configure timer2*/
	TIM2->ARR=max_value-1;
 80001e6:	88fb      	ldrh	r3, [r7, #6]
 80001e8:	1e5a      	subs	r2, r3, #1
 80001ea:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80001ee:	62da      	str	r2, [r3, #44]	; 0x2c

	TIM2->CCMR1 |= (TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0 );
 80001f0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80001f4:	699b      	ldr	r3, [r3, #24]
 80001f6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80001fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80001fe:	f043 0301 	orr.w	r3, r3, #1
 8000202:	6193      	str	r3, [r2, #24]
	TIM2->CCER &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
 8000204:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000208:	6a1b      	ldr	r3, [r3, #32]
 800020a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800020e:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8000212:	6213      	str	r3, [r2, #32]
	TIM2->SMCR |= TIM_SMCR_SMS_0 | TIM_SMCR_SMS_1;
 8000214:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000218:	689b      	ldr	r3, [r3, #8]
 800021a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800021e:	f043 0303 	orr.w	r3, r3, #3
 8000222:	6093      	str	r3, [r2, #8]
	TIM2->CR1 |= TIM_CR1_CEN ;
 8000224:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800022e:	f043 0301 	orr.w	r3, r3, #1
 8000232:	6013      	str	r3, [r2, #0]
	TIM2->CR1|=TIM_CR1_CEN;
 8000234:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800023e:	f043 0301 	orr.w	r3, r3, #1
 8000242:	6013      	str	r3, [r2, #0]

}
 8000244:	bf00      	nop
 8000246:	370c      	adds	r7, #12
 8000248:	46bd      	mov	sp, r7
 800024a:	bc80      	pop	{r7}
 800024c:	4770      	bx	lr
 800024e:	bf00      	nop
 8000250:	40021000 	.word	0x40021000
 8000254:	40010800 	.word	0x40010800
 8000258:	40010000 	.word	0x40010000

0800025c <encoder_read>:

uint16_t encoder_read(void){
 800025c:	b480      	push	{r7}
 800025e:	af00      	add	r7, sp, #0

	return  TIM2->CNT;
 8000260:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000264:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000266:	b29b      	uxth	r3, r3
}
 8000268:	4618      	mov	r0, r3
 800026a:	46bd      	mov	sp, r7
 800026c:	bc80      	pop	{r7}
 800026e:	4770      	bx	lr

08000270 <main>:


uint16_t encoder_read_previous;

int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0
	uart2_init();
 8000274:	f000 f908 	bl	8000488 <uart2_init>
	encoder_init(10);
 8000278:	200a      	movs	r0, #10
 800027a:	f7ff ff79 	bl	8000170 <encoder_init>
	printf("hello from stm32\r\n");
 800027e:	480c      	ldr	r0, [pc, #48]	; (80002b0 <main+0x40>)
 8000280:	f000 fa2e 	bl	80006e0 <puts>
	while(1)
	{

		if(encoder_read()!=encoder_read_previous)
 8000284:	f7ff ffea 	bl	800025c <encoder_read>
 8000288:	4603      	mov	r3, r0
 800028a:	461a      	mov	r2, r3
 800028c:	4b09      	ldr	r3, [pc, #36]	; (80002b4 <main+0x44>)
 800028e:	881b      	ldrh	r3, [r3, #0]
 8000290:	429a      	cmp	r2, r3
 8000292:	d0f7      	beq.n	8000284 <main+0x14>
		{
			encoder_read_previous=encoder_read();
 8000294:	f7ff ffe2 	bl	800025c <encoder_read>
 8000298:	4603      	mov	r3, r0
 800029a:	461a      	mov	r2, r3
 800029c:	4b05      	ldr	r3, [pc, #20]	; (80002b4 <main+0x44>)
 800029e:	801a      	strh	r2, [r3, #0]
			printf("Encoder counts = %d\r\n",encoder_read());
 80002a0:	f7ff ffdc 	bl	800025c <encoder_read>
 80002a4:	4603      	mov	r3, r0
 80002a6:	4619      	mov	r1, r3
 80002a8:	4803      	ldr	r0, [pc, #12]	; (80002b8 <main+0x48>)
 80002aa:	f000 f993 	bl	80005d4 <iprintf>
		if(encoder_read()!=encoder_read_previous)
 80002ae:	e7e9      	b.n	8000284 <main+0x14>
 80002b0:	08001600 	.word	0x08001600
 80002b4:	20000080 	.word	0x20000080
 80002b8:	08001614 	.word	0x08001614

080002bc <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	b086      	sub	sp, #24
 80002c0:	af00      	add	r7, sp, #0
 80002c2:	60f8      	str	r0, [r7, #12]
 80002c4:	60b9      	str	r1, [r7, #8]
 80002c6:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002c8:	2300      	movs	r3, #0
 80002ca:	617b      	str	r3, [r7, #20]
 80002cc:	e00a      	b.n	80002e4 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80002ce:	f3af 8000 	nop.w
 80002d2:	4601      	mov	r1, r0
 80002d4:	68bb      	ldr	r3, [r7, #8]
 80002d6:	1c5a      	adds	r2, r3, #1
 80002d8:	60ba      	str	r2, [r7, #8]
 80002da:	b2ca      	uxtb	r2, r1
 80002dc:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002de:	697b      	ldr	r3, [r7, #20]
 80002e0:	3301      	adds	r3, #1
 80002e2:	617b      	str	r3, [r7, #20]
 80002e4:	697a      	ldr	r2, [r7, #20]
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	429a      	cmp	r2, r3
 80002ea:	dbf0      	blt.n	80002ce <_read+0x12>
	}

return len;
 80002ec:	687b      	ldr	r3, [r7, #4]
}
 80002ee:	4618      	mov	r0, r3
 80002f0:	3718      	adds	r7, #24
 80002f2:	46bd      	mov	sp, r7
 80002f4:	bd80      	pop	{r7, pc}

080002f6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002f6:	b580      	push	{r7, lr}
 80002f8:	b086      	sub	sp, #24
 80002fa:	af00      	add	r7, sp, #0
 80002fc:	60f8      	str	r0, [r7, #12]
 80002fe:	60b9      	str	r1, [r7, #8]
 8000300:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000302:	2300      	movs	r3, #0
 8000304:	617b      	str	r3, [r7, #20]
 8000306:	e009      	b.n	800031c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000308:	68bb      	ldr	r3, [r7, #8]
 800030a:	1c5a      	adds	r2, r3, #1
 800030c:	60ba      	str	r2, [r7, #8]
 800030e:	781b      	ldrb	r3, [r3, #0]
 8000310:	4618      	mov	r0, r3
 8000312:	f000 f8ad 	bl	8000470 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000316:	697b      	ldr	r3, [r7, #20]
 8000318:	3301      	adds	r3, #1
 800031a:	617b      	str	r3, [r7, #20]
 800031c:	697a      	ldr	r2, [r7, #20]
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	429a      	cmp	r2, r3
 8000322:	dbf1      	blt.n	8000308 <_write+0x12>
	}
	return len;
 8000324:	687b      	ldr	r3, [r7, #4]
}
 8000326:	4618      	mov	r0, r3
 8000328:	3718      	adds	r7, #24
 800032a:	46bd      	mov	sp, r7
 800032c:	bd80      	pop	{r7, pc}

0800032e <_close>:

int _close(int file)
{
 800032e:	b480      	push	{r7}
 8000330:	b083      	sub	sp, #12
 8000332:	af00      	add	r7, sp, #0
 8000334:	6078      	str	r0, [r7, #4]
	return -1;
 8000336:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800033a:	4618      	mov	r0, r3
 800033c:	370c      	adds	r7, #12
 800033e:	46bd      	mov	sp, r7
 8000340:	bc80      	pop	{r7}
 8000342:	4770      	bx	lr

08000344 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000344:	b480      	push	{r7}
 8000346:	b083      	sub	sp, #12
 8000348:	af00      	add	r7, sp, #0
 800034a:	6078      	str	r0, [r7, #4]
 800034c:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800034e:	683b      	ldr	r3, [r7, #0]
 8000350:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000354:	605a      	str	r2, [r3, #4]
	return 0;
 8000356:	2300      	movs	r3, #0
}
 8000358:	4618      	mov	r0, r3
 800035a:	370c      	adds	r7, #12
 800035c:	46bd      	mov	sp, r7
 800035e:	bc80      	pop	{r7}
 8000360:	4770      	bx	lr

08000362 <_isatty>:

int _isatty(int file)
{
 8000362:	b480      	push	{r7}
 8000364:	b083      	sub	sp, #12
 8000366:	af00      	add	r7, sp, #0
 8000368:	6078      	str	r0, [r7, #4]
	return 1;
 800036a:	2301      	movs	r3, #1
}
 800036c:	4618      	mov	r0, r3
 800036e:	370c      	adds	r7, #12
 8000370:	46bd      	mov	sp, r7
 8000372:	bc80      	pop	{r7}
 8000374:	4770      	bx	lr

08000376 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000376:	b480      	push	{r7}
 8000378:	b085      	sub	sp, #20
 800037a:	af00      	add	r7, sp, #0
 800037c:	60f8      	str	r0, [r7, #12]
 800037e:	60b9      	str	r1, [r7, #8]
 8000380:	607a      	str	r2, [r7, #4]
	return 0;
 8000382:	2300      	movs	r3, #0
}
 8000384:	4618      	mov	r0, r3
 8000386:	3714      	adds	r7, #20
 8000388:	46bd      	mov	sp, r7
 800038a:	bc80      	pop	{r7}
 800038c:	4770      	bx	lr
	...

08000390 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000390:	b580      	push	{r7, lr}
 8000392:	b086      	sub	sp, #24
 8000394:	af00      	add	r7, sp, #0
 8000396:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000398:	4a14      	ldr	r2, [pc, #80]	; (80003ec <_sbrk+0x5c>)
 800039a:	4b15      	ldr	r3, [pc, #84]	; (80003f0 <_sbrk+0x60>)
 800039c:	1ad3      	subs	r3, r2, r3
 800039e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003a0:	697b      	ldr	r3, [r7, #20]
 80003a2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003a4:	4b13      	ldr	r3, [pc, #76]	; (80003f4 <_sbrk+0x64>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	2b00      	cmp	r3, #0
 80003aa:	d102      	bne.n	80003b2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003ac:	4b11      	ldr	r3, [pc, #68]	; (80003f4 <_sbrk+0x64>)
 80003ae:	4a12      	ldr	r2, [pc, #72]	; (80003f8 <_sbrk+0x68>)
 80003b0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003b2:	4b10      	ldr	r3, [pc, #64]	; (80003f4 <_sbrk+0x64>)
 80003b4:	681a      	ldr	r2, [r3, #0]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4413      	add	r3, r2
 80003ba:	693a      	ldr	r2, [r7, #16]
 80003bc:	429a      	cmp	r2, r3
 80003be:	d207      	bcs.n	80003d0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003c0:	f000 f8d6 	bl	8000570 <__errno>
 80003c4:	4603      	mov	r3, r0
 80003c6:	220c      	movs	r2, #12
 80003c8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ca:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80003ce:	e009      	b.n	80003e4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003d0:	4b08      	ldr	r3, [pc, #32]	; (80003f4 <_sbrk+0x64>)
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003d6:	4b07      	ldr	r3, [pc, #28]	; (80003f4 <_sbrk+0x64>)
 80003d8:	681a      	ldr	r2, [r3, #0]
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4413      	add	r3, r2
 80003de:	4a05      	ldr	r2, [pc, #20]	; (80003f4 <_sbrk+0x64>)
 80003e0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003e2:	68fb      	ldr	r3, [r7, #12]
}
 80003e4:	4618      	mov	r0, r3
 80003e6:	3718      	adds	r7, #24
 80003e8:	46bd      	mov	sp, r7
 80003ea:	bd80      	pop	{r7, pc}
 80003ec:	20005000 	.word	0x20005000
 80003f0:	00000400 	.word	0x00000400
 80003f4:	20000084 	.word	0x20000084
 80003f8:	20000098 	.word	0x20000098

080003fc <compute_uart_bd>:

#include "uart.h"
#include "stm32f1xx.h"

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 80003fc:	b480      	push	{r7}
 80003fe:	b083      	sub	sp, #12
 8000400:	af00      	add	r7, sp, #0
 8000402:	6078      	str	r0, [r7, #4]
 8000404:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 8000406:	683b      	ldr	r3, [r7, #0]
 8000408:	085a      	lsrs	r2, r3, #1
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	441a      	add	r2, r3
 800040e:	683b      	ldr	r3, [r7, #0]
 8000410:	fbb2 f3f3 	udiv	r3, r2, r3
 8000414:	b29b      	uxth	r3, r3
}
 8000416:	4618      	mov	r0, r3
 8000418:	370c      	adds	r7, #12
 800041a:	46bd      	mov	sp, r7
 800041c:	bc80      	pop	{r7}
 800041e:	4770      	bx	lr

08000420 <uart_set_baudrate>:


static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk,  uint32_t BaudRate)
{
 8000420:	b580      	push	{r7, lr}
 8000422:	b084      	sub	sp, #16
 8000424:	af00      	add	r7, sp, #0
 8000426:	60f8      	str	r0, [r7, #12]
 8000428:	60b9      	str	r1, [r7, #8]
 800042a:	607a      	str	r2, [r7, #4]
	USARTx->BRR =  compute_uart_bd(PeriphClk,BaudRate);
 800042c:	6879      	ldr	r1, [r7, #4]
 800042e:	68b8      	ldr	r0, [r7, #8]
 8000430:	f7ff ffe4 	bl	80003fc <compute_uart_bd>
 8000434:	4603      	mov	r3, r0
 8000436:	461a      	mov	r2, r3
 8000438:	68fb      	ldr	r3, [r7, #12]
 800043a:	609a      	str	r2, [r3, #8]
}
 800043c:	bf00      	nop
 800043e:	3710      	adds	r7, #16
 8000440:	46bd      	mov	sp, r7
 8000442:	bd80      	pop	{r7, pc}

08000444 <uart2_write>:




void uart2_write(int ch)
{
 8000444:	b480      	push	{r7}
 8000446:	b083      	sub	sp, #12
 8000448:	af00      	add	r7, sp, #0
 800044a:	6078      	str	r0, [r7, #4]
  /*Make sure the transmit data register is empty*/
	while(!(USART2->SR & USART_SR_TXE)){}
 800044c:	bf00      	nop
 800044e:	4b07      	ldr	r3, [pc, #28]	; (800046c <uart2_write+0x28>)
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000456:	2b00      	cmp	r3, #0
 8000458:	d0f9      	beq.n	800044e <uart2_write+0xa>

  /*Write to transmit data register*/
	USART2->DR	=  (ch & 0xFF);
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	4a03      	ldr	r2, [pc, #12]	; (800046c <uart2_write+0x28>)
 800045e:	b2db      	uxtb	r3, r3
 8000460:	6053      	str	r3, [r2, #4]
}
 8000462:	bf00      	nop
 8000464:	370c      	adds	r7, #12
 8000466:	46bd      	mov	sp, r7
 8000468:	bc80      	pop	{r7}
 800046a:	4770      	bx	lr
 800046c:	40004400 	.word	0x40004400

08000470 <__io_putchar>:

 int __io_putchar(int ch) {
 8000470:	b580      	push	{r7, lr}
 8000472:	b082      	sub	sp, #8
 8000474:	af00      	add	r7, sp, #0
 8000476:	6078      	str	r0, [r7, #4]
	 uart2_write(ch);
 8000478:	6878      	ldr	r0, [r7, #4]
 800047a:	f7ff ffe3 	bl	8000444 <uart2_write>
	 return ch;
 800047e:	687b      	ldr	r3, [r7, #4]

 }
 8000480:	4618      	mov	r0, r3
 8000482:	3708      	adds	r7, #8
 8000484:	46bd      	mov	sp, r7
 8000486:	bd80      	pop	{r7, pc}

08000488 <uart2_init>:


void uart2_init()
{
 8000488:	b580      	push	{r7, lr}
 800048a:	af00      	add	r7, sp, #0


	/*UART2 Pin configures*/

	//enable clock access to GPIOA
	RCC->APB2ENR|=RCC_APB2ENR_IOPAEN;
 800048c:	4b1e      	ldr	r3, [pc, #120]	; (8000508 <uart2_init+0x80>)
 800048e:	699b      	ldr	r3, [r3, #24]
 8000490:	4a1d      	ldr	r2, [pc, #116]	; (8000508 <uart2_init+0x80>)
 8000492:	f043 0304 	orr.w	r3, r3, #4
 8000496:	6193      	str	r3, [r2, #24]
	//Enable clock access to alternate function
	RCC->APB2ENR|=RCC_APB2ENR_AFIOEN;
 8000498:	4b1b      	ldr	r3, [pc, #108]	; (8000508 <uart2_init+0x80>)
 800049a:	699b      	ldr	r3, [r3, #24]
 800049c:	4a1a      	ldr	r2, [pc, #104]	; (8000508 <uart2_init+0x80>)
 800049e:	f043 0301 	orr.w	r3, r3, #1
 80004a2:	6193      	str	r3, [r2, #24]

	/*Confgiure PA2 as output maximum speed to 50MHz
	 * and alternate output push-pull mode*/
	GPIOA->CRL|=GPIO_CRL_MODE2;
 80004a4:	4b19      	ldr	r3, [pc, #100]	; (800050c <uart2_init+0x84>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	4a18      	ldr	r2, [pc, #96]	; (800050c <uart2_init+0x84>)
 80004aa:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 80004ae:	6013      	str	r3, [r2, #0]

	GPIOA->CRL|=GPIO_CRL_CNF2_1;
 80004b0:	4b16      	ldr	r3, [pc, #88]	; (800050c <uart2_init+0x84>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	4a15      	ldr	r2, [pc, #84]	; (800050c <uart2_init+0x84>)
 80004b6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80004ba:	6013      	str	r3, [r2, #0]
	GPIOA->CRL&=~GPIO_CRL_CNF2_0;
 80004bc:	4b13      	ldr	r3, [pc, #76]	; (800050c <uart2_init+0x84>)
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	4a12      	ldr	r2, [pc, #72]	; (800050c <uart2_init+0x84>)
 80004c2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80004c6:	6013      	str	r3, [r2, #0]


	/*Don't remap the pins*/
	AFIO->MAPR&=~AFIO_MAPR_USART2_REMAP;
 80004c8:	4b11      	ldr	r3, [pc, #68]	; (8000510 <uart2_init+0x88>)
 80004ca:	685b      	ldr	r3, [r3, #4]
 80004cc:	4a10      	ldr	r2, [pc, #64]	; (8000510 <uart2_init+0x88>)
 80004ce:	f023 0308 	bic.w	r3, r3, #8
 80004d2:	6053      	str	r3, [r2, #4]

	/*USART2 configuration*/

	//enable clock access to USART2

	RCC->APB1ENR|=RCC_APB1ENR_USART2EN;
 80004d4:	4b0c      	ldr	r3, [pc, #48]	; (8000508 <uart2_init+0x80>)
 80004d6:	69db      	ldr	r3, [r3, #28]
 80004d8:	4a0b      	ldr	r2, [pc, #44]	; (8000508 <uart2_init+0x80>)
 80004da:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80004de:	61d3      	str	r3, [r2, #28]

	//Transmit Enable
	USART2->CR1 |= USART_CR1_TE;
 80004e0:	4b0c      	ldr	r3, [pc, #48]	; (8000514 <uart2_init+0x8c>)
 80004e2:	68db      	ldr	r3, [r3, #12]
 80004e4:	4a0b      	ldr	r2, [pc, #44]	; (8000514 <uart2_init+0x8c>)
 80004e6:	f043 0308 	orr.w	r3, r3, #8
 80004ea:	60d3      	str	r3, [r2, #12]

	/*Set baudrate */
	uart_set_baudrate(USART2,Perpher_CLK,Baudrate);
 80004ec:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80004f0:	4909      	ldr	r1, [pc, #36]	; (8000518 <uart2_init+0x90>)
 80004f2:	4808      	ldr	r0, [pc, #32]	; (8000514 <uart2_init+0x8c>)
 80004f4:	f7ff ff94 	bl	8000420 <uart_set_baudrate>
	//Enable UART
	USART2->CR1 |= USART_CR1_UE;
 80004f8:	4b06      	ldr	r3, [pc, #24]	; (8000514 <uart2_init+0x8c>)
 80004fa:	68db      	ldr	r3, [r3, #12]
 80004fc:	4a05      	ldr	r2, [pc, #20]	; (8000514 <uart2_init+0x8c>)
 80004fe:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000502:	60d3      	str	r3, [r2, #12]


}
 8000504:	bf00      	nop
 8000506:	bd80      	pop	{r7, pc}
 8000508:	40021000 	.word	0x40021000
 800050c:	40010800 	.word	0x40010800
 8000510:	40010000 	.word	0x40010000
 8000514:	40004400 	.word	0x40004400
 8000518:	007a1200 	.word	0x007a1200

0800051c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800051c:	480d      	ldr	r0, [pc, #52]	; (8000554 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800051e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000520:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000524:	480c      	ldr	r0, [pc, #48]	; (8000558 <LoopForever+0x6>)
  ldr r1, =_edata
 8000526:	490d      	ldr	r1, [pc, #52]	; (800055c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000528:	4a0d      	ldr	r2, [pc, #52]	; (8000560 <LoopForever+0xe>)
  movs r3, #0
 800052a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800052c:	e002      	b.n	8000534 <LoopCopyDataInit>

0800052e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800052e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000530:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000532:	3304      	adds	r3, #4

08000534 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000534:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000536:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000538:	d3f9      	bcc.n	800052e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800053a:	4a0a      	ldr	r2, [pc, #40]	; (8000564 <LoopForever+0x12>)
  ldr r4, =_ebss
 800053c:	4c0a      	ldr	r4, [pc, #40]	; (8000568 <LoopForever+0x16>)
  movs r3, #0
 800053e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000540:	e001      	b.n	8000546 <LoopFillZerobss>

08000542 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000542:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000544:	3204      	adds	r2, #4

08000546 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000546:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000548:	d3fb      	bcc.n	8000542 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800054a:	f000 f817 	bl	800057c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800054e:	f7ff fe8f 	bl	8000270 <main>

08000552 <LoopForever>:

LoopForever:
    b LoopForever
 8000552:	e7fe      	b.n	8000552 <LoopForever>
  ldr   r0, =_estack
 8000554:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000558:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800055c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000560:	080016cc 	.word	0x080016cc
  ldr r2, =_sbss
 8000564:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000568:	20000098 	.word	0x20000098

0800056c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800056c:	e7fe      	b.n	800056c <ADC1_2_IRQHandler>
	...

08000570 <__errno>:
 8000570:	4b01      	ldr	r3, [pc, #4]	; (8000578 <__errno+0x8>)
 8000572:	6818      	ldr	r0, [r3, #0]
 8000574:	4770      	bx	lr
 8000576:	bf00      	nop
 8000578:	20000000 	.word	0x20000000

0800057c <__libc_init_array>:
 800057c:	b570      	push	{r4, r5, r6, lr}
 800057e:	2600      	movs	r6, #0
 8000580:	4d0c      	ldr	r5, [pc, #48]	; (80005b4 <__libc_init_array+0x38>)
 8000582:	4c0d      	ldr	r4, [pc, #52]	; (80005b8 <__libc_init_array+0x3c>)
 8000584:	1b64      	subs	r4, r4, r5
 8000586:	10a4      	asrs	r4, r4, #2
 8000588:	42a6      	cmp	r6, r4
 800058a:	d109      	bne.n	80005a0 <__libc_init_array+0x24>
 800058c:	f001 f82c 	bl	80015e8 <_init>
 8000590:	2600      	movs	r6, #0
 8000592:	4d0a      	ldr	r5, [pc, #40]	; (80005bc <__libc_init_array+0x40>)
 8000594:	4c0a      	ldr	r4, [pc, #40]	; (80005c0 <__libc_init_array+0x44>)
 8000596:	1b64      	subs	r4, r4, r5
 8000598:	10a4      	asrs	r4, r4, #2
 800059a:	42a6      	cmp	r6, r4
 800059c:	d105      	bne.n	80005aa <__libc_init_array+0x2e>
 800059e:	bd70      	pop	{r4, r5, r6, pc}
 80005a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80005a4:	4798      	blx	r3
 80005a6:	3601      	adds	r6, #1
 80005a8:	e7ee      	b.n	8000588 <__libc_init_array+0xc>
 80005aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80005ae:	4798      	blx	r3
 80005b0:	3601      	adds	r6, #1
 80005b2:	e7f2      	b.n	800059a <__libc_init_array+0x1e>
 80005b4:	080016c4 	.word	0x080016c4
 80005b8:	080016c4 	.word	0x080016c4
 80005bc:	080016c4 	.word	0x080016c4
 80005c0:	080016c8 	.word	0x080016c8

080005c4 <memset>:
 80005c4:	4603      	mov	r3, r0
 80005c6:	4402      	add	r2, r0
 80005c8:	4293      	cmp	r3, r2
 80005ca:	d100      	bne.n	80005ce <memset+0xa>
 80005cc:	4770      	bx	lr
 80005ce:	f803 1b01 	strb.w	r1, [r3], #1
 80005d2:	e7f9      	b.n	80005c8 <memset+0x4>

080005d4 <iprintf>:
 80005d4:	b40f      	push	{r0, r1, r2, r3}
 80005d6:	4b0a      	ldr	r3, [pc, #40]	; (8000600 <iprintf+0x2c>)
 80005d8:	b513      	push	{r0, r1, r4, lr}
 80005da:	681c      	ldr	r4, [r3, #0]
 80005dc:	b124      	cbz	r4, 80005e8 <iprintf+0x14>
 80005de:	69a3      	ldr	r3, [r4, #24]
 80005e0:	b913      	cbnz	r3, 80005e8 <iprintf+0x14>
 80005e2:	4620      	mov	r0, r4
 80005e4:	f000 fa5a 	bl	8000a9c <__sinit>
 80005e8:	ab05      	add	r3, sp, #20
 80005ea:	4620      	mov	r0, r4
 80005ec:	9a04      	ldr	r2, [sp, #16]
 80005ee:	68a1      	ldr	r1, [r4, #8]
 80005f0:	9301      	str	r3, [sp, #4]
 80005f2:	f000 fc5d 	bl	8000eb0 <_vfiprintf_r>
 80005f6:	b002      	add	sp, #8
 80005f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005fc:	b004      	add	sp, #16
 80005fe:	4770      	bx	lr
 8000600:	20000000 	.word	0x20000000

08000604 <_puts_r>:
 8000604:	b570      	push	{r4, r5, r6, lr}
 8000606:	460e      	mov	r6, r1
 8000608:	4605      	mov	r5, r0
 800060a:	b118      	cbz	r0, 8000614 <_puts_r+0x10>
 800060c:	6983      	ldr	r3, [r0, #24]
 800060e:	b90b      	cbnz	r3, 8000614 <_puts_r+0x10>
 8000610:	f000 fa44 	bl	8000a9c <__sinit>
 8000614:	69ab      	ldr	r3, [r5, #24]
 8000616:	68ac      	ldr	r4, [r5, #8]
 8000618:	b913      	cbnz	r3, 8000620 <_puts_r+0x1c>
 800061a:	4628      	mov	r0, r5
 800061c:	f000 fa3e 	bl	8000a9c <__sinit>
 8000620:	4b2c      	ldr	r3, [pc, #176]	; (80006d4 <_puts_r+0xd0>)
 8000622:	429c      	cmp	r4, r3
 8000624:	d120      	bne.n	8000668 <_puts_r+0x64>
 8000626:	686c      	ldr	r4, [r5, #4]
 8000628:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800062a:	07db      	lsls	r3, r3, #31
 800062c:	d405      	bmi.n	800063a <_puts_r+0x36>
 800062e:	89a3      	ldrh	r3, [r4, #12]
 8000630:	0598      	lsls	r0, r3, #22
 8000632:	d402      	bmi.n	800063a <_puts_r+0x36>
 8000634:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000636:	f000 facf 	bl	8000bd8 <__retarget_lock_acquire_recursive>
 800063a:	89a3      	ldrh	r3, [r4, #12]
 800063c:	0719      	lsls	r1, r3, #28
 800063e:	d51d      	bpl.n	800067c <_puts_r+0x78>
 8000640:	6923      	ldr	r3, [r4, #16]
 8000642:	b1db      	cbz	r3, 800067c <_puts_r+0x78>
 8000644:	3e01      	subs	r6, #1
 8000646:	68a3      	ldr	r3, [r4, #8]
 8000648:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800064c:	3b01      	subs	r3, #1
 800064e:	60a3      	str	r3, [r4, #8]
 8000650:	bb39      	cbnz	r1, 80006a2 <_puts_r+0x9e>
 8000652:	2b00      	cmp	r3, #0
 8000654:	da38      	bge.n	80006c8 <_puts_r+0xc4>
 8000656:	4622      	mov	r2, r4
 8000658:	210a      	movs	r1, #10
 800065a:	4628      	mov	r0, r5
 800065c:	f000 f848 	bl	80006f0 <__swbuf_r>
 8000660:	3001      	adds	r0, #1
 8000662:	d011      	beq.n	8000688 <_puts_r+0x84>
 8000664:	250a      	movs	r5, #10
 8000666:	e011      	b.n	800068c <_puts_r+0x88>
 8000668:	4b1b      	ldr	r3, [pc, #108]	; (80006d8 <_puts_r+0xd4>)
 800066a:	429c      	cmp	r4, r3
 800066c:	d101      	bne.n	8000672 <_puts_r+0x6e>
 800066e:	68ac      	ldr	r4, [r5, #8]
 8000670:	e7da      	b.n	8000628 <_puts_r+0x24>
 8000672:	4b1a      	ldr	r3, [pc, #104]	; (80006dc <_puts_r+0xd8>)
 8000674:	429c      	cmp	r4, r3
 8000676:	bf08      	it	eq
 8000678:	68ec      	ldreq	r4, [r5, #12]
 800067a:	e7d5      	b.n	8000628 <_puts_r+0x24>
 800067c:	4621      	mov	r1, r4
 800067e:	4628      	mov	r0, r5
 8000680:	f000 f888 	bl	8000794 <__swsetup_r>
 8000684:	2800      	cmp	r0, #0
 8000686:	d0dd      	beq.n	8000644 <_puts_r+0x40>
 8000688:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 800068c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800068e:	07da      	lsls	r2, r3, #31
 8000690:	d405      	bmi.n	800069e <_puts_r+0x9a>
 8000692:	89a3      	ldrh	r3, [r4, #12]
 8000694:	059b      	lsls	r3, r3, #22
 8000696:	d402      	bmi.n	800069e <_puts_r+0x9a>
 8000698:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800069a:	f000 fa9e 	bl	8000bda <__retarget_lock_release_recursive>
 800069e:	4628      	mov	r0, r5
 80006a0:	bd70      	pop	{r4, r5, r6, pc}
 80006a2:	2b00      	cmp	r3, #0
 80006a4:	da04      	bge.n	80006b0 <_puts_r+0xac>
 80006a6:	69a2      	ldr	r2, [r4, #24]
 80006a8:	429a      	cmp	r2, r3
 80006aa:	dc06      	bgt.n	80006ba <_puts_r+0xb6>
 80006ac:	290a      	cmp	r1, #10
 80006ae:	d004      	beq.n	80006ba <_puts_r+0xb6>
 80006b0:	6823      	ldr	r3, [r4, #0]
 80006b2:	1c5a      	adds	r2, r3, #1
 80006b4:	6022      	str	r2, [r4, #0]
 80006b6:	7019      	strb	r1, [r3, #0]
 80006b8:	e7c5      	b.n	8000646 <_puts_r+0x42>
 80006ba:	4622      	mov	r2, r4
 80006bc:	4628      	mov	r0, r5
 80006be:	f000 f817 	bl	80006f0 <__swbuf_r>
 80006c2:	3001      	adds	r0, #1
 80006c4:	d1bf      	bne.n	8000646 <_puts_r+0x42>
 80006c6:	e7df      	b.n	8000688 <_puts_r+0x84>
 80006c8:	250a      	movs	r5, #10
 80006ca:	6823      	ldr	r3, [r4, #0]
 80006cc:	1c5a      	adds	r2, r3, #1
 80006ce:	6022      	str	r2, [r4, #0]
 80006d0:	701d      	strb	r5, [r3, #0]
 80006d2:	e7db      	b.n	800068c <_puts_r+0x88>
 80006d4:	08001650 	.word	0x08001650
 80006d8:	08001670 	.word	0x08001670
 80006dc:	08001630 	.word	0x08001630

080006e0 <puts>:
 80006e0:	4b02      	ldr	r3, [pc, #8]	; (80006ec <puts+0xc>)
 80006e2:	4601      	mov	r1, r0
 80006e4:	6818      	ldr	r0, [r3, #0]
 80006e6:	f7ff bf8d 	b.w	8000604 <_puts_r>
 80006ea:	bf00      	nop
 80006ec:	20000000 	.word	0x20000000

080006f0 <__swbuf_r>:
 80006f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006f2:	460e      	mov	r6, r1
 80006f4:	4614      	mov	r4, r2
 80006f6:	4605      	mov	r5, r0
 80006f8:	b118      	cbz	r0, 8000702 <__swbuf_r+0x12>
 80006fa:	6983      	ldr	r3, [r0, #24]
 80006fc:	b90b      	cbnz	r3, 8000702 <__swbuf_r+0x12>
 80006fe:	f000 f9cd 	bl	8000a9c <__sinit>
 8000702:	4b21      	ldr	r3, [pc, #132]	; (8000788 <__swbuf_r+0x98>)
 8000704:	429c      	cmp	r4, r3
 8000706:	d12b      	bne.n	8000760 <__swbuf_r+0x70>
 8000708:	686c      	ldr	r4, [r5, #4]
 800070a:	69a3      	ldr	r3, [r4, #24]
 800070c:	60a3      	str	r3, [r4, #8]
 800070e:	89a3      	ldrh	r3, [r4, #12]
 8000710:	071a      	lsls	r2, r3, #28
 8000712:	d52f      	bpl.n	8000774 <__swbuf_r+0x84>
 8000714:	6923      	ldr	r3, [r4, #16]
 8000716:	b36b      	cbz	r3, 8000774 <__swbuf_r+0x84>
 8000718:	6923      	ldr	r3, [r4, #16]
 800071a:	6820      	ldr	r0, [r4, #0]
 800071c:	b2f6      	uxtb	r6, r6
 800071e:	1ac0      	subs	r0, r0, r3
 8000720:	6963      	ldr	r3, [r4, #20]
 8000722:	4637      	mov	r7, r6
 8000724:	4283      	cmp	r3, r0
 8000726:	dc04      	bgt.n	8000732 <__swbuf_r+0x42>
 8000728:	4621      	mov	r1, r4
 800072a:	4628      	mov	r0, r5
 800072c:	f000 f922 	bl	8000974 <_fflush_r>
 8000730:	bb30      	cbnz	r0, 8000780 <__swbuf_r+0x90>
 8000732:	68a3      	ldr	r3, [r4, #8]
 8000734:	3001      	adds	r0, #1
 8000736:	3b01      	subs	r3, #1
 8000738:	60a3      	str	r3, [r4, #8]
 800073a:	6823      	ldr	r3, [r4, #0]
 800073c:	1c5a      	adds	r2, r3, #1
 800073e:	6022      	str	r2, [r4, #0]
 8000740:	701e      	strb	r6, [r3, #0]
 8000742:	6963      	ldr	r3, [r4, #20]
 8000744:	4283      	cmp	r3, r0
 8000746:	d004      	beq.n	8000752 <__swbuf_r+0x62>
 8000748:	89a3      	ldrh	r3, [r4, #12]
 800074a:	07db      	lsls	r3, r3, #31
 800074c:	d506      	bpl.n	800075c <__swbuf_r+0x6c>
 800074e:	2e0a      	cmp	r6, #10
 8000750:	d104      	bne.n	800075c <__swbuf_r+0x6c>
 8000752:	4621      	mov	r1, r4
 8000754:	4628      	mov	r0, r5
 8000756:	f000 f90d 	bl	8000974 <_fflush_r>
 800075a:	b988      	cbnz	r0, 8000780 <__swbuf_r+0x90>
 800075c:	4638      	mov	r0, r7
 800075e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000760:	4b0a      	ldr	r3, [pc, #40]	; (800078c <__swbuf_r+0x9c>)
 8000762:	429c      	cmp	r4, r3
 8000764:	d101      	bne.n	800076a <__swbuf_r+0x7a>
 8000766:	68ac      	ldr	r4, [r5, #8]
 8000768:	e7cf      	b.n	800070a <__swbuf_r+0x1a>
 800076a:	4b09      	ldr	r3, [pc, #36]	; (8000790 <__swbuf_r+0xa0>)
 800076c:	429c      	cmp	r4, r3
 800076e:	bf08      	it	eq
 8000770:	68ec      	ldreq	r4, [r5, #12]
 8000772:	e7ca      	b.n	800070a <__swbuf_r+0x1a>
 8000774:	4621      	mov	r1, r4
 8000776:	4628      	mov	r0, r5
 8000778:	f000 f80c 	bl	8000794 <__swsetup_r>
 800077c:	2800      	cmp	r0, #0
 800077e:	d0cb      	beq.n	8000718 <__swbuf_r+0x28>
 8000780:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000784:	e7ea      	b.n	800075c <__swbuf_r+0x6c>
 8000786:	bf00      	nop
 8000788:	08001650 	.word	0x08001650
 800078c:	08001670 	.word	0x08001670
 8000790:	08001630 	.word	0x08001630

08000794 <__swsetup_r>:
 8000794:	4b32      	ldr	r3, [pc, #200]	; (8000860 <__swsetup_r+0xcc>)
 8000796:	b570      	push	{r4, r5, r6, lr}
 8000798:	681d      	ldr	r5, [r3, #0]
 800079a:	4606      	mov	r6, r0
 800079c:	460c      	mov	r4, r1
 800079e:	b125      	cbz	r5, 80007aa <__swsetup_r+0x16>
 80007a0:	69ab      	ldr	r3, [r5, #24]
 80007a2:	b913      	cbnz	r3, 80007aa <__swsetup_r+0x16>
 80007a4:	4628      	mov	r0, r5
 80007a6:	f000 f979 	bl	8000a9c <__sinit>
 80007aa:	4b2e      	ldr	r3, [pc, #184]	; (8000864 <__swsetup_r+0xd0>)
 80007ac:	429c      	cmp	r4, r3
 80007ae:	d10f      	bne.n	80007d0 <__swsetup_r+0x3c>
 80007b0:	686c      	ldr	r4, [r5, #4]
 80007b2:	89a3      	ldrh	r3, [r4, #12]
 80007b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80007b8:	0719      	lsls	r1, r3, #28
 80007ba:	d42c      	bmi.n	8000816 <__swsetup_r+0x82>
 80007bc:	06dd      	lsls	r5, r3, #27
 80007be:	d411      	bmi.n	80007e4 <__swsetup_r+0x50>
 80007c0:	2309      	movs	r3, #9
 80007c2:	6033      	str	r3, [r6, #0]
 80007c4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80007c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80007cc:	81a3      	strh	r3, [r4, #12]
 80007ce:	e03e      	b.n	800084e <__swsetup_r+0xba>
 80007d0:	4b25      	ldr	r3, [pc, #148]	; (8000868 <__swsetup_r+0xd4>)
 80007d2:	429c      	cmp	r4, r3
 80007d4:	d101      	bne.n	80007da <__swsetup_r+0x46>
 80007d6:	68ac      	ldr	r4, [r5, #8]
 80007d8:	e7eb      	b.n	80007b2 <__swsetup_r+0x1e>
 80007da:	4b24      	ldr	r3, [pc, #144]	; (800086c <__swsetup_r+0xd8>)
 80007dc:	429c      	cmp	r4, r3
 80007de:	bf08      	it	eq
 80007e0:	68ec      	ldreq	r4, [r5, #12]
 80007e2:	e7e6      	b.n	80007b2 <__swsetup_r+0x1e>
 80007e4:	0758      	lsls	r0, r3, #29
 80007e6:	d512      	bpl.n	800080e <__swsetup_r+0x7a>
 80007e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007ea:	b141      	cbz	r1, 80007fe <__swsetup_r+0x6a>
 80007ec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007f0:	4299      	cmp	r1, r3
 80007f2:	d002      	beq.n	80007fa <__swsetup_r+0x66>
 80007f4:	4630      	mov	r0, r6
 80007f6:	f000 fa57 	bl	8000ca8 <_free_r>
 80007fa:	2300      	movs	r3, #0
 80007fc:	6363      	str	r3, [r4, #52]	; 0x34
 80007fe:	89a3      	ldrh	r3, [r4, #12]
 8000800:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000804:	81a3      	strh	r3, [r4, #12]
 8000806:	2300      	movs	r3, #0
 8000808:	6063      	str	r3, [r4, #4]
 800080a:	6923      	ldr	r3, [r4, #16]
 800080c:	6023      	str	r3, [r4, #0]
 800080e:	89a3      	ldrh	r3, [r4, #12]
 8000810:	f043 0308 	orr.w	r3, r3, #8
 8000814:	81a3      	strh	r3, [r4, #12]
 8000816:	6923      	ldr	r3, [r4, #16]
 8000818:	b94b      	cbnz	r3, 800082e <__swsetup_r+0x9a>
 800081a:	89a3      	ldrh	r3, [r4, #12]
 800081c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000820:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000824:	d003      	beq.n	800082e <__swsetup_r+0x9a>
 8000826:	4621      	mov	r1, r4
 8000828:	4630      	mov	r0, r6
 800082a:	f000 f9fd 	bl	8000c28 <__smakebuf_r>
 800082e:	89a0      	ldrh	r0, [r4, #12]
 8000830:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000834:	f010 0301 	ands.w	r3, r0, #1
 8000838:	d00a      	beq.n	8000850 <__swsetup_r+0xbc>
 800083a:	2300      	movs	r3, #0
 800083c:	60a3      	str	r3, [r4, #8]
 800083e:	6963      	ldr	r3, [r4, #20]
 8000840:	425b      	negs	r3, r3
 8000842:	61a3      	str	r3, [r4, #24]
 8000844:	6923      	ldr	r3, [r4, #16]
 8000846:	b943      	cbnz	r3, 800085a <__swsetup_r+0xc6>
 8000848:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800084c:	d1ba      	bne.n	80007c4 <__swsetup_r+0x30>
 800084e:	bd70      	pop	{r4, r5, r6, pc}
 8000850:	0781      	lsls	r1, r0, #30
 8000852:	bf58      	it	pl
 8000854:	6963      	ldrpl	r3, [r4, #20]
 8000856:	60a3      	str	r3, [r4, #8]
 8000858:	e7f4      	b.n	8000844 <__swsetup_r+0xb0>
 800085a:	2000      	movs	r0, #0
 800085c:	e7f7      	b.n	800084e <__swsetup_r+0xba>
 800085e:	bf00      	nop
 8000860:	20000000 	.word	0x20000000
 8000864:	08001650 	.word	0x08001650
 8000868:	08001670 	.word	0x08001670
 800086c:	08001630 	.word	0x08001630

08000870 <__sflush_r>:
 8000870:	898a      	ldrh	r2, [r1, #12]
 8000872:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000874:	4605      	mov	r5, r0
 8000876:	0710      	lsls	r0, r2, #28
 8000878:	460c      	mov	r4, r1
 800087a:	d457      	bmi.n	800092c <__sflush_r+0xbc>
 800087c:	684b      	ldr	r3, [r1, #4]
 800087e:	2b00      	cmp	r3, #0
 8000880:	dc04      	bgt.n	800088c <__sflush_r+0x1c>
 8000882:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000884:	2b00      	cmp	r3, #0
 8000886:	dc01      	bgt.n	800088c <__sflush_r+0x1c>
 8000888:	2000      	movs	r0, #0
 800088a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800088c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800088e:	2e00      	cmp	r6, #0
 8000890:	d0fa      	beq.n	8000888 <__sflush_r+0x18>
 8000892:	2300      	movs	r3, #0
 8000894:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000898:	682f      	ldr	r7, [r5, #0]
 800089a:	602b      	str	r3, [r5, #0]
 800089c:	d032      	beq.n	8000904 <__sflush_r+0x94>
 800089e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008a0:	89a3      	ldrh	r3, [r4, #12]
 80008a2:	075a      	lsls	r2, r3, #29
 80008a4:	d505      	bpl.n	80008b2 <__sflush_r+0x42>
 80008a6:	6863      	ldr	r3, [r4, #4]
 80008a8:	1ac0      	subs	r0, r0, r3
 80008aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008ac:	b10b      	cbz	r3, 80008b2 <__sflush_r+0x42>
 80008ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008b0:	1ac0      	subs	r0, r0, r3
 80008b2:	2300      	movs	r3, #0
 80008b4:	4602      	mov	r2, r0
 80008b6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008b8:	4628      	mov	r0, r5
 80008ba:	6a21      	ldr	r1, [r4, #32]
 80008bc:	47b0      	blx	r6
 80008be:	1c43      	adds	r3, r0, #1
 80008c0:	89a3      	ldrh	r3, [r4, #12]
 80008c2:	d106      	bne.n	80008d2 <__sflush_r+0x62>
 80008c4:	6829      	ldr	r1, [r5, #0]
 80008c6:	291d      	cmp	r1, #29
 80008c8:	d82c      	bhi.n	8000924 <__sflush_r+0xb4>
 80008ca:	4a29      	ldr	r2, [pc, #164]	; (8000970 <__sflush_r+0x100>)
 80008cc:	40ca      	lsrs	r2, r1
 80008ce:	07d6      	lsls	r6, r2, #31
 80008d0:	d528      	bpl.n	8000924 <__sflush_r+0xb4>
 80008d2:	2200      	movs	r2, #0
 80008d4:	6062      	str	r2, [r4, #4]
 80008d6:	6922      	ldr	r2, [r4, #16]
 80008d8:	04d9      	lsls	r1, r3, #19
 80008da:	6022      	str	r2, [r4, #0]
 80008dc:	d504      	bpl.n	80008e8 <__sflush_r+0x78>
 80008de:	1c42      	adds	r2, r0, #1
 80008e0:	d101      	bne.n	80008e6 <__sflush_r+0x76>
 80008e2:	682b      	ldr	r3, [r5, #0]
 80008e4:	b903      	cbnz	r3, 80008e8 <__sflush_r+0x78>
 80008e6:	6560      	str	r0, [r4, #84]	; 0x54
 80008e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008ea:	602f      	str	r7, [r5, #0]
 80008ec:	2900      	cmp	r1, #0
 80008ee:	d0cb      	beq.n	8000888 <__sflush_r+0x18>
 80008f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80008f4:	4299      	cmp	r1, r3
 80008f6:	d002      	beq.n	80008fe <__sflush_r+0x8e>
 80008f8:	4628      	mov	r0, r5
 80008fa:	f000 f9d5 	bl	8000ca8 <_free_r>
 80008fe:	2000      	movs	r0, #0
 8000900:	6360      	str	r0, [r4, #52]	; 0x34
 8000902:	e7c2      	b.n	800088a <__sflush_r+0x1a>
 8000904:	6a21      	ldr	r1, [r4, #32]
 8000906:	2301      	movs	r3, #1
 8000908:	4628      	mov	r0, r5
 800090a:	47b0      	blx	r6
 800090c:	1c41      	adds	r1, r0, #1
 800090e:	d1c7      	bne.n	80008a0 <__sflush_r+0x30>
 8000910:	682b      	ldr	r3, [r5, #0]
 8000912:	2b00      	cmp	r3, #0
 8000914:	d0c4      	beq.n	80008a0 <__sflush_r+0x30>
 8000916:	2b1d      	cmp	r3, #29
 8000918:	d001      	beq.n	800091e <__sflush_r+0xae>
 800091a:	2b16      	cmp	r3, #22
 800091c:	d101      	bne.n	8000922 <__sflush_r+0xb2>
 800091e:	602f      	str	r7, [r5, #0]
 8000920:	e7b2      	b.n	8000888 <__sflush_r+0x18>
 8000922:	89a3      	ldrh	r3, [r4, #12]
 8000924:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000928:	81a3      	strh	r3, [r4, #12]
 800092a:	e7ae      	b.n	800088a <__sflush_r+0x1a>
 800092c:	690f      	ldr	r7, [r1, #16]
 800092e:	2f00      	cmp	r7, #0
 8000930:	d0aa      	beq.n	8000888 <__sflush_r+0x18>
 8000932:	0793      	lsls	r3, r2, #30
 8000934:	bf18      	it	ne
 8000936:	2300      	movne	r3, #0
 8000938:	680e      	ldr	r6, [r1, #0]
 800093a:	bf08      	it	eq
 800093c:	694b      	ldreq	r3, [r1, #20]
 800093e:	1bf6      	subs	r6, r6, r7
 8000940:	600f      	str	r7, [r1, #0]
 8000942:	608b      	str	r3, [r1, #8]
 8000944:	2e00      	cmp	r6, #0
 8000946:	dd9f      	ble.n	8000888 <__sflush_r+0x18>
 8000948:	4633      	mov	r3, r6
 800094a:	463a      	mov	r2, r7
 800094c:	4628      	mov	r0, r5
 800094e:	6a21      	ldr	r1, [r4, #32]
 8000950:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000954:	47e0      	blx	ip
 8000956:	2800      	cmp	r0, #0
 8000958:	dc06      	bgt.n	8000968 <__sflush_r+0xf8>
 800095a:	89a3      	ldrh	r3, [r4, #12]
 800095c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000960:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000964:	81a3      	strh	r3, [r4, #12]
 8000966:	e790      	b.n	800088a <__sflush_r+0x1a>
 8000968:	4407      	add	r7, r0
 800096a:	1a36      	subs	r6, r6, r0
 800096c:	e7ea      	b.n	8000944 <__sflush_r+0xd4>
 800096e:	bf00      	nop
 8000970:	20400001 	.word	0x20400001

08000974 <_fflush_r>:
 8000974:	b538      	push	{r3, r4, r5, lr}
 8000976:	690b      	ldr	r3, [r1, #16]
 8000978:	4605      	mov	r5, r0
 800097a:	460c      	mov	r4, r1
 800097c:	b913      	cbnz	r3, 8000984 <_fflush_r+0x10>
 800097e:	2500      	movs	r5, #0
 8000980:	4628      	mov	r0, r5
 8000982:	bd38      	pop	{r3, r4, r5, pc}
 8000984:	b118      	cbz	r0, 800098e <_fflush_r+0x1a>
 8000986:	6983      	ldr	r3, [r0, #24]
 8000988:	b90b      	cbnz	r3, 800098e <_fflush_r+0x1a>
 800098a:	f000 f887 	bl	8000a9c <__sinit>
 800098e:	4b14      	ldr	r3, [pc, #80]	; (80009e0 <_fflush_r+0x6c>)
 8000990:	429c      	cmp	r4, r3
 8000992:	d11b      	bne.n	80009cc <_fflush_r+0x58>
 8000994:	686c      	ldr	r4, [r5, #4]
 8000996:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800099a:	2b00      	cmp	r3, #0
 800099c:	d0ef      	beq.n	800097e <_fflush_r+0xa>
 800099e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80009a0:	07d0      	lsls	r0, r2, #31
 80009a2:	d404      	bmi.n	80009ae <_fflush_r+0x3a>
 80009a4:	0599      	lsls	r1, r3, #22
 80009a6:	d402      	bmi.n	80009ae <_fflush_r+0x3a>
 80009a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009aa:	f000 f915 	bl	8000bd8 <__retarget_lock_acquire_recursive>
 80009ae:	4628      	mov	r0, r5
 80009b0:	4621      	mov	r1, r4
 80009b2:	f7ff ff5d 	bl	8000870 <__sflush_r>
 80009b6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80009b8:	4605      	mov	r5, r0
 80009ba:	07da      	lsls	r2, r3, #31
 80009bc:	d4e0      	bmi.n	8000980 <_fflush_r+0xc>
 80009be:	89a3      	ldrh	r3, [r4, #12]
 80009c0:	059b      	lsls	r3, r3, #22
 80009c2:	d4dd      	bmi.n	8000980 <_fflush_r+0xc>
 80009c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009c6:	f000 f908 	bl	8000bda <__retarget_lock_release_recursive>
 80009ca:	e7d9      	b.n	8000980 <_fflush_r+0xc>
 80009cc:	4b05      	ldr	r3, [pc, #20]	; (80009e4 <_fflush_r+0x70>)
 80009ce:	429c      	cmp	r4, r3
 80009d0:	d101      	bne.n	80009d6 <_fflush_r+0x62>
 80009d2:	68ac      	ldr	r4, [r5, #8]
 80009d4:	e7df      	b.n	8000996 <_fflush_r+0x22>
 80009d6:	4b04      	ldr	r3, [pc, #16]	; (80009e8 <_fflush_r+0x74>)
 80009d8:	429c      	cmp	r4, r3
 80009da:	bf08      	it	eq
 80009dc:	68ec      	ldreq	r4, [r5, #12]
 80009de:	e7da      	b.n	8000996 <_fflush_r+0x22>
 80009e0:	08001650 	.word	0x08001650
 80009e4:	08001670 	.word	0x08001670
 80009e8:	08001630 	.word	0x08001630

080009ec <std>:
 80009ec:	2300      	movs	r3, #0
 80009ee:	b510      	push	{r4, lr}
 80009f0:	4604      	mov	r4, r0
 80009f2:	e9c0 3300 	strd	r3, r3, [r0]
 80009f6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80009fa:	6083      	str	r3, [r0, #8]
 80009fc:	8181      	strh	r1, [r0, #12]
 80009fe:	6643      	str	r3, [r0, #100]	; 0x64
 8000a00:	81c2      	strh	r2, [r0, #14]
 8000a02:	6183      	str	r3, [r0, #24]
 8000a04:	4619      	mov	r1, r3
 8000a06:	2208      	movs	r2, #8
 8000a08:	305c      	adds	r0, #92	; 0x5c
 8000a0a:	f7ff fddb 	bl	80005c4 <memset>
 8000a0e:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <std+0x38>)
 8000a10:	6224      	str	r4, [r4, #32]
 8000a12:	6263      	str	r3, [r4, #36]	; 0x24
 8000a14:	4b04      	ldr	r3, [pc, #16]	; (8000a28 <std+0x3c>)
 8000a16:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a18:	4b04      	ldr	r3, [pc, #16]	; (8000a2c <std+0x40>)
 8000a1a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a1c:	4b04      	ldr	r3, [pc, #16]	; (8000a30 <std+0x44>)
 8000a1e:	6323      	str	r3, [r4, #48]	; 0x30
 8000a20:	bd10      	pop	{r4, pc}
 8000a22:	bf00      	nop
 8000a24:	0800145d 	.word	0x0800145d
 8000a28:	0800147f 	.word	0x0800147f
 8000a2c:	080014b7 	.word	0x080014b7
 8000a30:	080014db 	.word	0x080014db

08000a34 <_cleanup_r>:
 8000a34:	4901      	ldr	r1, [pc, #4]	; (8000a3c <_cleanup_r+0x8>)
 8000a36:	f000 b8af 	b.w	8000b98 <_fwalk_reent>
 8000a3a:	bf00      	nop
 8000a3c:	08000975 	.word	0x08000975

08000a40 <__sfmoreglue>:
 8000a40:	2268      	movs	r2, #104	; 0x68
 8000a42:	b570      	push	{r4, r5, r6, lr}
 8000a44:	1e4d      	subs	r5, r1, #1
 8000a46:	4355      	muls	r5, r2
 8000a48:	460e      	mov	r6, r1
 8000a4a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a4e:	f000 f993 	bl	8000d78 <_malloc_r>
 8000a52:	4604      	mov	r4, r0
 8000a54:	b140      	cbz	r0, 8000a68 <__sfmoreglue+0x28>
 8000a56:	2100      	movs	r1, #0
 8000a58:	e9c0 1600 	strd	r1, r6, [r0]
 8000a5c:	300c      	adds	r0, #12
 8000a5e:	60a0      	str	r0, [r4, #8]
 8000a60:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a64:	f7ff fdae 	bl	80005c4 <memset>
 8000a68:	4620      	mov	r0, r4
 8000a6a:	bd70      	pop	{r4, r5, r6, pc}

08000a6c <__sfp_lock_acquire>:
 8000a6c:	4801      	ldr	r0, [pc, #4]	; (8000a74 <__sfp_lock_acquire+0x8>)
 8000a6e:	f000 b8b3 	b.w	8000bd8 <__retarget_lock_acquire_recursive>
 8000a72:	bf00      	nop
 8000a74:	20000089 	.word	0x20000089

08000a78 <__sfp_lock_release>:
 8000a78:	4801      	ldr	r0, [pc, #4]	; (8000a80 <__sfp_lock_release+0x8>)
 8000a7a:	f000 b8ae 	b.w	8000bda <__retarget_lock_release_recursive>
 8000a7e:	bf00      	nop
 8000a80:	20000089 	.word	0x20000089

08000a84 <__sinit_lock_acquire>:
 8000a84:	4801      	ldr	r0, [pc, #4]	; (8000a8c <__sinit_lock_acquire+0x8>)
 8000a86:	f000 b8a7 	b.w	8000bd8 <__retarget_lock_acquire_recursive>
 8000a8a:	bf00      	nop
 8000a8c:	2000008a 	.word	0x2000008a

08000a90 <__sinit_lock_release>:
 8000a90:	4801      	ldr	r0, [pc, #4]	; (8000a98 <__sinit_lock_release+0x8>)
 8000a92:	f000 b8a2 	b.w	8000bda <__retarget_lock_release_recursive>
 8000a96:	bf00      	nop
 8000a98:	2000008a 	.word	0x2000008a

08000a9c <__sinit>:
 8000a9c:	b510      	push	{r4, lr}
 8000a9e:	4604      	mov	r4, r0
 8000aa0:	f7ff fff0 	bl	8000a84 <__sinit_lock_acquire>
 8000aa4:	69a3      	ldr	r3, [r4, #24]
 8000aa6:	b11b      	cbz	r3, 8000ab0 <__sinit+0x14>
 8000aa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000aac:	f7ff bff0 	b.w	8000a90 <__sinit_lock_release>
 8000ab0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000ab4:	6523      	str	r3, [r4, #80]	; 0x50
 8000ab6:	4b13      	ldr	r3, [pc, #76]	; (8000b04 <__sinit+0x68>)
 8000ab8:	4a13      	ldr	r2, [pc, #76]	; (8000b08 <__sinit+0x6c>)
 8000aba:	681b      	ldr	r3, [r3, #0]
 8000abc:	62a2      	str	r2, [r4, #40]	; 0x28
 8000abe:	42a3      	cmp	r3, r4
 8000ac0:	bf08      	it	eq
 8000ac2:	2301      	moveq	r3, #1
 8000ac4:	4620      	mov	r0, r4
 8000ac6:	bf08      	it	eq
 8000ac8:	61a3      	streq	r3, [r4, #24]
 8000aca:	f000 f81f 	bl	8000b0c <__sfp>
 8000ace:	6060      	str	r0, [r4, #4]
 8000ad0:	4620      	mov	r0, r4
 8000ad2:	f000 f81b 	bl	8000b0c <__sfp>
 8000ad6:	60a0      	str	r0, [r4, #8]
 8000ad8:	4620      	mov	r0, r4
 8000ada:	f000 f817 	bl	8000b0c <__sfp>
 8000ade:	2200      	movs	r2, #0
 8000ae0:	2104      	movs	r1, #4
 8000ae2:	60e0      	str	r0, [r4, #12]
 8000ae4:	6860      	ldr	r0, [r4, #4]
 8000ae6:	f7ff ff81 	bl	80009ec <std>
 8000aea:	2201      	movs	r2, #1
 8000aec:	2109      	movs	r1, #9
 8000aee:	68a0      	ldr	r0, [r4, #8]
 8000af0:	f7ff ff7c 	bl	80009ec <std>
 8000af4:	2202      	movs	r2, #2
 8000af6:	2112      	movs	r1, #18
 8000af8:	68e0      	ldr	r0, [r4, #12]
 8000afa:	f7ff ff77 	bl	80009ec <std>
 8000afe:	2301      	movs	r3, #1
 8000b00:	61a3      	str	r3, [r4, #24]
 8000b02:	e7d1      	b.n	8000aa8 <__sinit+0xc>
 8000b04:	0800162c 	.word	0x0800162c
 8000b08:	08000a35 	.word	0x08000a35

08000b0c <__sfp>:
 8000b0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b0e:	4607      	mov	r7, r0
 8000b10:	f7ff ffac 	bl	8000a6c <__sfp_lock_acquire>
 8000b14:	4b1e      	ldr	r3, [pc, #120]	; (8000b90 <__sfp+0x84>)
 8000b16:	681e      	ldr	r6, [r3, #0]
 8000b18:	69b3      	ldr	r3, [r6, #24]
 8000b1a:	b913      	cbnz	r3, 8000b22 <__sfp+0x16>
 8000b1c:	4630      	mov	r0, r6
 8000b1e:	f7ff ffbd 	bl	8000a9c <__sinit>
 8000b22:	3648      	adds	r6, #72	; 0x48
 8000b24:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b28:	3b01      	subs	r3, #1
 8000b2a:	d503      	bpl.n	8000b34 <__sfp+0x28>
 8000b2c:	6833      	ldr	r3, [r6, #0]
 8000b2e:	b30b      	cbz	r3, 8000b74 <__sfp+0x68>
 8000b30:	6836      	ldr	r6, [r6, #0]
 8000b32:	e7f7      	b.n	8000b24 <__sfp+0x18>
 8000b34:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b38:	b9d5      	cbnz	r5, 8000b70 <__sfp+0x64>
 8000b3a:	4b16      	ldr	r3, [pc, #88]	; (8000b94 <__sfp+0x88>)
 8000b3c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b40:	60e3      	str	r3, [r4, #12]
 8000b42:	6665      	str	r5, [r4, #100]	; 0x64
 8000b44:	f000 f847 	bl	8000bd6 <__retarget_lock_init_recursive>
 8000b48:	f7ff ff96 	bl	8000a78 <__sfp_lock_release>
 8000b4c:	2208      	movs	r2, #8
 8000b4e:	4629      	mov	r1, r5
 8000b50:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000b54:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000b58:	6025      	str	r5, [r4, #0]
 8000b5a:	61a5      	str	r5, [r4, #24]
 8000b5c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b60:	f7ff fd30 	bl	80005c4 <memset>
 8000b64:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b68:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b6c:	4620      	mov	r0, r4
 8000b6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b70:	3468      	adds	r4, #104	; 0x68
 8000b72:	e7d9      	b.n	8000b28 <__sfp+0x1c>
 8000b74:	2104      	movs	r1, #4
 8000b76:	4638      	mov	r0, r7
 8000b78:	f7ff ff62 	bl	8000a40 <__sfmoreglue>
 8000b7c:	4604      	mov	r4, r0
 8000b7e:	6030      	str	r0, [r6, #0]
 8000b80:	2800      	cmp	r0, #0
 8000b82:	d1d5      	bne.n	8000b30 <__sfp+0x24>
 8000b84:	f7ff ff78 	bl	8000a78 <__sfp_lock_release>
 8000b88:	230c      	movs	r3, #12
 8000b8a:	603b      	str	r3, [r7, #0]
 8000b8c:	e7ee      	b.n	8000b6c <__sfp+0x60>
 8000b8e:	bf00      	nop
 8000b90:	0800162c 	.word	0x0800162c
 8000b94:	ffff0001 	.word	0xffff0001

08000b98 <_fwalk_reent>:
 8000b98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b9c:	4606      	mov	r6, r0
 8000b9e:	4688      	mov	r8, r1
 8000ba0:	2700      	movs	r7, #0
 8000ba2:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000ba6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000baa:	f1b9 0901 	subs.w	r9, r9, #1
 8000bae:	d505      	bpl.n	8000bbc <_fwalk_reent+0x24>
 8000bb0:	6824      	ldr	r4, [r4, #0]
 8000bb2:	2c00      	cmp	r4, #0
 8000bb4:	d1f7      	bne.n	8000ba6 <_fwalk_reent+0xe>
 8000bb6:	4638      	mov	r0, r7
 8000bb8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bbc:	89ab      	ldrh	r3, [r5, #12]
 8000bbe:	2b01      	cmp	r3, #1
 8000bc0:	d907      	bls.n	8000bd2 <_fwalk_reent+0x3a>
 8000bc2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000bc6:	3301      	adds	r3, #1
 8000bc8:	d003      	beq.n	8000bd2 <_fwalk_reent+0x3a>
 8000bca:	4629      	mov	r1, r5
 8000bcc:	4630      	mov	r0, r6
 8000bce:	47c0      	blx	r8
 8000bd0:	4307      	orrs	r7, r0
 8000bd2:	3568      	adds	r5, #104	; 0x68
 8000bd4:	e7e9      	b.n	8000baa <_fwalk_reent+0x12>

08000bd6 <__retarget_lock_init_recursive>:
 8000bd6:	4770      	bx	lr

08000bd8 <__retarget_lock_acquire_recursive>:
 8000bd8:	4770      	bx	lr

08000bda <__retarget_lock_release_recursive>:
 8000bda:	4770      	bx	lr

08000bdc <__swhatbuf_r>:
 8000bdc:	b570      	push	{r4, r5, r6, lr}
 8000bde:	460e      	mov	r6, r1
 8000be0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000be4:	4614      	mov	r4, r2
 8000be6:	2900      	cmp	r1, #0
 8000be8:	461d      	mov	r5, r3
 8000bea:	b096      	sub	sp, #88	; 0x58
 8000bec:	da08      	bge.n	8000c00 <__swhatbuf_r+0x24>
 8000bee:	2200      	movs	r2, #0
 8000bf0:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000bf4:	602a      	str	r2, [r5, #0]
 8000bf6:	061a      	lsls	r2, r3, #24
 8000bf8:	d410      	bmi.n	8000c1c <__swhatbuf_r+0x40>
 8000bfa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000bfe:	e00e      	b.n	8000c1e <__swhatbuf_r+0x42>
 8000c00:	466a      	mov	r2, sp
 8000c02:	f000 fc91 	bl	8001528 <_fstat_r>
 8000c06:	2800      	cmp	r0, #0
 8000c08:	dbf1      	blt.n	8000bee <__swhatbuf_r+0x12>
 8000c0a:	9a01      	ldr	r2, [sp, #4]
 8000c0c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c10:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c14:	425a      	negs	r2, r3
 8000c16:	415a      	adcs	r2, r3
 8000c18:	602a      	str	r2, [r5, #0]
 8000c1a:	e7ee      	b.n	8000bfa <__swhatbuf_r+0x1e>
 8000c1c:	2340      	movs	r3, #64	; 0x40
 8000c1e:	2000      	movs	r0, #0
 8000c20:	6023      	str	r3, [r4, #0]
 8000c22:	b016      	add	sp, #88	; 0x58
 8000c24:	bd70      	pop	{r4, r5, r6, pc}
	...

08000c28 <__smakebuf_r>:
 8000c28:	898b      	ldrh	r3, [r1, #12]
 8000c2a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c2c:	079d      	lsls	r5, r3, #30
 8000c2e:	4606      	mov	r6, r0
 8000c30:	460c      	mov	r4, r1
 8000c32:	d507      	bpl.n	8000c44 <__smakebuf_r+0x1c>
 8000c34:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c38:	6023      	str	r3, [r4, #0]
 8000c3a:	6123      	str	r3, [r4, #16]
 8000c3c:	2301      	movs	r3, #1
 8000c3e:	6163      	str	r3, [r4, #20]
 8000c40:	b002      	add	sp, #8
 8000c42:	bd70      	pop	{r4, r5, r6, pc}
 8000c44:	466a      	mov	r2, sp
 8000c46:	ab01      	add	r3, sp, #4
 8000c48:	f7ff ffc8 	bl	8000bdc <__swhatbuf_r>
 8000c4c:	9900      	ldr	r1, [sp, #0]
 8000c4e:	4605      	mov	r5, r0
 8000c50:	4630      	mov	r0, r6
 8000c52:	f000 f891 	bl	8000d78 <_malloc_r>
 8000c56:	b948      	cbnz	r0, 8000c6c <__smakebuf_r+0x44>
 8000c58:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c5c:	059a      	lsls	r2, r3, #22
 8000c5e:	d4ef      	bmi.n	8000c40 <__smakebuf_r+0x18>
 8000c60:	f023 0303 	bic.w	r3, r3, #3
 8000c64:	f043 0302 	orr.w	r3, r3, #2
 8000c68:	81a3      	strh	r3, [r4, #12]
 8000c6a:	e7e3      	b.n	8000c34 <__smakebuf_r+0xc>
 8000c6c:	4b0d      	ldr	r3, [pc, #52]	; (8000ca4 <__smakebuf_r+0x7c>)
 8000c6e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c70:	89a3      	ldrh	r3, [r4, #12]
 8000c72:	6020      	str	r0, [r4, #0]
 8000c74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c78:	81a3      	strh	r3, [r4, #12]
 8000c7a:	9b00      	ldr	r3, [sp, #0]
 8000c7c:	6120      	str	r0, [r4, #16]
 8000c7e:	6163      	str	r3, [r4, #20]
 8000c80:	9b01      	ldr	r3, [sp, #4]
 8000c82:	b15b      	cbz	r3, 8000c9c <__smakebuf_r+0x74>
 8000c84:	4630      	mov	r0, r6
 8000c86:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c8a:	f000 fc5f 	bl	800154c <_isatty_r>
 8000c8e:	b128      	cbz	r0, 8000c9c <__smakebuf_r+0x74>
 8000c90:	89a3      	ldrh	r3, [r4, #12]
 8000c92:	f023 0303 	bic.w	r3, r3, #3
 8000c96:	f043 0301 	orr.w	r3, r3, #1
 8000c9a:	81a3      	strh	r3, [r4, #12]
 8000c9c:	89a0      	ldrh	r0, [r4, #12]
 8000c9e:	4305      	orrs	r5, r0
 8000ca0:	81a5      	strh	r5, [r4, #12]
 8000ca2:	e7cd      	b.n	8000c40 <__smakebuf_r+0x18>
 8000ca4:	08000a35 	.word	0x08000a35

08000ca8 <_free_r>:
 8000ca8:	b538      	push	{r3, r4, r5, lr}
 8000caa:	4605      	mov	r5, r0
 8000cac:	2900      	cmp	r1, #0
 8000cae:	d040      	beq.n	8000d32 <_free_r+0x8a>
 8000cb0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000cb4:	1f0c      	subs	r4, r1, #4
 8000cb6:	2b00      	cmp	r3, #0
 8000cb8:	bfb8      	it	lt
 8000cba:	18e4      	addlt	r4, r4, r3
 8000cbc:	f000 fc76 	bl	80015ac <__malloc_lock>
 8000cc0:	4a1c      	ldr	r2, [pc, #112]	; (8000d34 <_free_r+0x8c>)
 8000cc2:	6813      	ldr	r3, [r2, #0]
 8000cc4:	b933      	cbnz	r3, 8000cd4 <_free_r+0x2c>
 8000cc6:	6063      	str	r3, [r4, #4]
 8000cc8:	6014      	str	r4, [r2, #0]
 8000cca:	4628      	mov	r0, r5
 8000ccc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cd0:	f000 bc72 	b.w	80015b8 <__malloc_unlock>
 8000cd4:	42a3      	cmp	r3, r4
 8000cd6:	d908      	bls.n	8000cea <_free_r+0x42>
 8000cd8:	6820      	ldr	r0, [r4, #0]
 8000cda:	1821      	adds	r1, r4, r0
 8000cdc:	428b      	cmp	r3, r1
 8000cde:	bf01      	itttt	eq
 8000ce0:	6819      	ldreq	r1, [r3, #0]
 8000ce2:	685b      	ldreq	r3, [r3, #4]
 8000ce4:	1809      	addeq	r1, r1, r0
 8000ce6:	6021      	streq	r1, [r4, #0]
 8000ce8:	e7ed      	b.n	8000cc6 <_free_r+0x1e>
 8000cea:	461a      	mov	r2, r3
 8000cec:	685b      	ldr	r3, [r3, #4]
 8000cee:	b10b      	cbz	r3, 8000cf4 <_free_r+0x4c>
 8000cf0:	42a3      	cmp	r3, r4
 8000cf2:	d9fa      	bls.n	8000cea <_free_r+0x42>
 8000cf4:	6811      	ldr	r1, [r2, #0]
 8000cf6:	1850      	adds	r0, r2, r1
 8000cf8:	42a0      	cmp	r0, r4
 8000cfa:	d10b      	bne.n	8000d14 <_free_r+0x6c>
 8000cfc:	6820      	ldr	r0, [r4, #0]
 8000cfe:	4401      	add	r1, r0
 8000d00:	1850      	adds	r0, r2, r1
 8000d02:	4283      	cmp	r3, r0
 8000d04:	6011      	str	r1, [r2, #0]
 8000d06:	d1e0      	bne.n	8000cca <_free_r+0x22>
 8000d08:	6818      	ldr	r0, [r3, #0]
 8000d0a:	685b      	ldr	r3, [r3, #4]
 8000d0c:	4401      	add	r1, r0
 8000d0e:	6011      	str	r1, [r2, #0]
 8000d10:	6053      	str	r3, [r2, #4]
 8000d12:	e7da      	b.n	8000cca <_free_r+0x22>
 8000d14:	d902      	bls.n	8000d1c <_free_r+0x74>
 8000d16:	230c      	movs	r3, #12
 8000d18:	602b      	str	r3, [r5, #0]
 8000d1a:	e7d6      	b.n	8000cca <_free_r+0x22>
 8000d1c:	6820      	ldr	r0, [r4, #0]
 8000d1e:	1821      	adds	r1, r4, r0
 8000d20:	428b      	cmp	r3, r1
 8000d22:	bf01      	itttt	eq
 8000d24:	6819      	ldreq	r1, [r3, #0]
 8000d26:	685b      	ldreq	r3, [r3, #4]
 8000d28:	1809      	addeq	r1, r1, r0
 8000d2a:	6021      	streq	r1, [r4, #0]
 8000d2c:	6063      	str	r3, [r4, #4]
 8000d2e:	6054      	str	r4, [r2, #4]
 8000d30:	e7cb      	b.n	8000cca <_free_r+0x22>
 8000d32:	bd38      	pop	{r3, r4, r5, pc}
 8000d34:	2000008c 	.word	0x2000008c

08000d38 <sbrk_aligned>:
 8000d38:	b570      	push	{r4, r5, r6, lr}
 8000d3a:	4e0e      	ldr	r6, [pc, #56]	; (8000d74 <sbrk_aligned+0x3c>)
 8000d3c:	460c      	mov	r4, r1
 8000d3e:	6831      	ldr	r1, [r6, #0]
 8000d40:	4605      	mov	r5, r0
 8000d42:	b911      	cbnz	r1, 8000d4a <sbrk_aligned+0x12>
 8000d44:	f000 fb7a 	bl	800143c <_sbrk_r>
 8000d48:	6030      	str	r0, [r6, #0]
 8000d4a:	4621      	mov	r1, r4
 8000d4c:	4628      	mov	r0, r5
 8000d4e:	f000 fb75 	bl	800143c <_sbrk_r>
 8000d52:	1c43      	adds	r3, r0, #1
 8000d54:	d00a      	beq.n	8000d6c <sbrk_aligned+0x34>
 8000d56:	1cc4      	adds	r4, r0, #3
 8000d58:	f024 0403 	bic.w	r4, r4, #3
 8000d5c:	42a0      	cmp	r0, r4
 8000d5e:	d007      	beq.n	8000d70 <sbrk_aligned+0x38>
 8000d60:	1a21      	subs	r1, r4, r0
 8000d62:	4628      	mov	r0, r5
 8000d64:	f000 fb6a 	bl	800143c <_sbrk_r>
 8000d68:	3001      	adds	r0, #1
 8000d6a:	d101      	bne.n	8000d70 <sbrk_aligned+0x38>
 8000d6c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000d70:	4620      	mov	r0, r4
 8000d72:	bd70      	pop	{r4, r5, r6, pc}
 8000d74:	20000090 	.word	0x20000090

08000d78 <_malloc_r>:
 8000d78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d7c:	1ccd      	adds	r5, r1, #3
 8000d7e:	f025 0503 	bic.w	r5, r5, #3
 8000d82:	3508      	adds	r5, #8
 8000d84:	2d0c      	cmp	r5, #12
 8000d86:	bf38      	it	cc
 8000d88:	250c      	movcc	r5, #12
 8000d8a:	2d00      	cmp	r5, #0
 8000d8c:	4607      	mov	r7, r0
 8000d8e:	db01      	blt.n	8000d94 <_malloc_r+0x1c>
 8000d90:	42a9      	cmp	r1, r5
 8000d92:	d905      	bls.n	8000da0 <_malloc_r+0x28>
 8000d94:	230c      	movs	r3, #12
 8000d96:	2600      	movs	r6, #0
 8000d98:	603b      	str	r3, [r7, #0]
 8000d9a:	4630      	mov	r0, r6
 8000d9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000da0:	4e2e      	ldr	r6, [pc, #184]	; (8000e5c <_malloc_r+0xe4>)
 8000da2:	f000 fc03 	bl	80015ac <__malloc_lock>
 8000da6:	6833      	ldr	r3, [r6, #0]
 8000da8:	461c      	mov	r4, r3
 8000daa:	bb34      	cbnz	r4, 8000dfa <_malloc_r+0x82>
 8000dac:	4629      	mov	r1, r5
 8000dae:	4638      	mov	r0, r7
 8000db0:	f7ff ffc2 	bl	8000d38 <sbrk_aligned>
 8000db4:	1c43      	adds	r3, r0, #1
 8000db6:	4604      	mov	r4, r0
 8000db8:	d14d      	bne.n	8000e56 <_malloc_r+0xde>
 8000dba:	6834      	ldr	r4, [r6, #0]
 8000dbc:	4626      	mov	r6, r4
 8000dbe:	2e00      	cmp	r6, #0
 8000dc0:	d140      	bne.n	8000e44 <_malloc_r+0xcc>
 8000dc2:	6823      	ldr	r3, [r4, #0]
 8000dc4:	4631      	mov	r1, r6
 8000dc6:	4638      	mov	r0, r7
 8000dc8:	eb04 0803 	add.w	r8, r4, r3
 8000dcc:	f000 fb36 	bl	800143c <_sbrk_r>
 8000dd0:	4580      	cmp	r8, r0
 8000dd2:	d13a      	bne.n	8000e4a <_malloc_r+0xd2>
 8000dd4:	6821      	ldr	r1, [r4, #0]
 8000dd6:	3503      	adds	r5, #3
 8000dd8:	1a6d      	subs	r5, r5, r1
 8000dda:	f025 0503 	bic.w	r5, r5, #3
 8000dde:	3508      	adds	r5, #8
 8000de0:	2d0c      	cmp	r5, #12
 8000de2:	bf38      	it	cc
 8000de4:	250c      	movcc	r5, #12
 8000de6:	4638      	mov	r0, r7
 8000de8:	4629      	mov	r1, r5
 8000dea:	f7ff ffa5 	bl	8000d38 <sbrk_aligned>
 8000dee:	3001      	adds	r0, #1
 8000df0:	d02b      	beq.n	8000e4a <_malloc_r+0xd2>
 8000df2:	6823      	ldr	r3, [r4, #0]
 8000df4:	442b      	add	r3, r5
 8000df6:	6023      	str	r3, [r4, #0]
 8000df8:	e00e      	b.n	8000e18 <_malloc_r+0xa0>
 8000dfa:	6822      	ldr	r2, [r4, #0]
 8000dfc:	1b52      	subs	r2, r2, r5
 8000dfe:	d41e      	bmi.n	8000e3e <_malloc_r+0xc6>
 8000e00:	2a0b      	cmp	r2, #11
 8000e02:	d916      	bls.n	8000e32 <_malloc_r+0xba>
 8000e04:	1961      	adds	r1, r4, r5
 8000e06:	42a3      	cmp	r3, r4
 8000e08:	6025      	str	r5, [r4, #0]
 8000e0a:	bf18      	it	ne
 8000e0c:	6059      	strne	r1, [r3, #4]
 8000e0e:	6863      	ldr	r3, [r4, #4]
 8000e10:	bf08      	it	eq
 8000e12:	6031      	streq	r1, [r6, #0]
 8000e14:	5162      	str	r2, [r4, r5]
 8000e16:	604b      	str	r3, [r1, #4]
 8000e18:	4638      	mov	r0, r7
 8000e1a:	f104 060b 	add.w	r6, r4, #11
 8000e1e:	f000 fbcb 	bl	80015b8 <__malloc_unlock>
 8000e22:	f026 0607 	bic.w	r6, r6, #7
 8000e26:	1d23      	adds	r3, r4, #4
 8000e28:	1af2      	subs	r2, r6, r3
 8000e2a:	d0b6      	beq.n	8000d9a <_malloc_r+0x22>
 8000e2c:	1b9b      	subs	r3, r3, r6
 8000e2e:	50a3      	str	r3, [r4, r2]
 8000e30:	e7b3      	b.n	8000d9a <_malloc_r+0x22>
 8000e32:	6862      	ldr	r2, [r4, #4]
 8000e34:	42a3      	cmp	r3, r4
 8000e36:	bf0c      	ite	eq
 8000e38:	6032      	streq	r2, [r6, #0]
 8000e3a:	605a      	strne	r2, [r3, #4]
 8000e3c:	e7ec      	b.n	8000e18 <_malloc_r+0xa0>
 8000e3e:	4623      	mov	r3, r4
 8000e40:	6864      	ldr	r4, [r4, #4]
 8000e42:	e7b2      	b.n	8000daa <_malloc_r+0x32>
 8000e44:	4634      	mov	r4, r6
 8000e46:	6876      	ldr	r6, [r6, #4]
 8000e48:	e7b9      	b.n	8000dbe <_malloc_r+0x46>
 8000e4a:	230c      	movs	r3, #12
 8000e4c:	4638      	mov	r0, r7
 8000e4e:	603b      	str	r3, [r7, #0]
 8000e50:	f000 fbb2 	bl	80015b8 <__malloc_unlock>
 8000e54:	e7a1      	b.n	8000d9a <_malloc_r+0x22>
 8000e56:	6025      	str	r5, [r4, #0]
 8000e58:	e7de      	b.n	8000e18 <_malloc_r+0xa0>
 8000e5a:	bf00      	nop
 8000e5c:	2000008c 	.word	0x2000008c

08000e60 <__sfputc_r>:
 8000e60:	6893      	ldr	r3, [r2, #8]
 8000e62:	b410      	push	{r4}
 8000e64:	3b01      	subs	r3, #1
 8000e66:	2b00      	cmp	r3, #0
 8000e68:	6093      	str	r3, [r2, #8]
 8000e6a:	da07      	bge.n	8000e7c <__sfputc_r+0x1c>
 8000e6c:	6994      	ldr	r4, [r2, #24]
 8000e6e:	42a3      	cmp	r3, r4
 8000e70:	db01      	blt.n	8000e76 <__sfputc_r+0x16>
 8000e72:	290a      	cmp	r1, #10
 8000e74:	d102      	bne.n	8000e7c <__sfputc_r+0x1c>
 8000e76:	bc10      	pop	{r4}
 8000e78:	f7ff bc3a 	b.w	80006f0 <__swbuf_r>
 8000e7c:	6813      	ldr	r3, [r2, #0]
 8000e7e:	1c58      	adds	r0, r3, #1
 8000e80:	6010      	str	r0, [r2, #0]
 8000e82:	7019      	strb	r1, [r3, #0]
 8000e84:	4608      	mov	r0, r1
 8000e86:	bc10      	pop	{r4}
 8000e88:	4770      	bx	lr

08000e8a <__sfputs_r>:
 8000e8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e8c:	4606      	mov	r6, r0
 8000e8e:	460f      	mov	r7, r1
 8000e90:	4614      	mov	r4, r2
 8000e92:	18d5      	adds	r5, r2, r3
 8000e94:	42ac      	cmp	r4, r5
 8000e96:	d101      	bne.n	8000e9c <__sfputs_r+0x12>
 8000e98:	2000      	movs	r0, #0
 8000e9a:	e007      	b.n	8000eac <__sfputs_r+0x22>
 8000e9c:	463a      	mov	r2, r7
 8000e9e:	4630      	mov	r0, r6
 8000ea0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ea4:	f7ff ffdc 	bl	8000e60 <__sfputc_r>
 8000ea8:	1c43      	adds	r3, r0, #1
 8000eaa:	d1f3      	bne.n	8000e94 <__sfputs_r+0xa>
 8000eac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000eb0 <_vfiprintf_r>:
 8000eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000eb4:	460d      	mov	r5, r1
 8000eb6:	4614      	mov	r4, r2
 8000eb8:	4698      	mov	r8, r3
 8000eba:	4606      	mov	r6, r0
 8000ebc:	b09d      	sub	sp, #116	; 0x74
 8000ebe:	b118      	cbz	r0, 8000ec8 <_vfiprintf_r+0x18>
 8000ec0:	6983      	ldr	r3, [r0, #24]
 8000ec2:	b90b      	cbnz	r3, 8000ec8 <_vfiprintf_r+0x18>
 8000ec4:	f7ff fdea 	bl	8000a9c <__sinit>
 8000ec8:	4b89      	ldr	r3, [pc, #548]	; (80010f0 <_vfiprintf_r+0x240>)
 8000eca:	429d      	cmp	r5, r3
 8000ecc:	d11b      	bne.n	8000f06 <_vfiprintf_r+0x56>
 8000ece:	6875      	ldr	r5, [r6, #4]
 8000ed0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ed2:	07d9      	lsls	r1, r3, #31
 8000ed4:	d405      	bmi.n	8000ee2 <_vfiprintf_r+0x32>
 8000ed6:	89ab      	ldrh	r3, [r5, #12]
 8000ed8:	059a      	lsls	r2, r3, #22
 8000eda:	d402      	bmi.n	8000ee2 <_vfiprintf_r+0x32>
 8000edc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ede:	f7ff fe7b 	bl	8000bd8 <__retarget_lock_acquire_recursive>
 8000ee2:	89ab      	ldrh	r3, [r5, #12]
 8000ee4:	071b      	lsls	r3, r3, #28
 8000ee6:	d501      	bpl.n	8000eec <_vfiprintf_r+0x3c>
 8000ee8:	692b      	ldr	r3, [r5, #16]
 8000eea:	b9eb      	cbnz	r3, 8000f28 <_vfiprintf_r+0x78>
 8000eec:	4629      	mov	r1, r5
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f7ff fc50 	bl	8000794 <__swsetup_r>
 8000ef4:	b1c0      	cbz	r0, 8000f28 <_vfiprintf_r+0x78>
 8000ef6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ef8:	07dc      	lsls	r4, r3, #31
 8000efa:	d50e      	bpl.n	8000f1a <_vfiprintf_r+0x6a>
 8000efc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f00:	b01d      	add	sp, #116	; 0x74
 8000f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f06:	4b7b      	ldr	r3, [pc, #492]	; (80010f4 <_vfiprintf_r+0x244>)
 8000f08:	429d      	cmp	r5, r3
 8000f0a:	d101      	bne.n	8000f10 <_vfiprintf_r+0x60>
 8000f0c:	68b5      	ldr	r5, [r6, #8]
 8000f0e:	e7df      	b.n	8000ed0 <_vfiprintf_r+0x20>
 8000f10:	4b79      	ldr	r3, [pc, #484]	; (80010f8 <_vfiprintf_r+0x248>)
 8000f12:	429d      	cmp	r5, r3
 8000f14:	bf08      	it	eq
 8000f16:	68f5      	ldreq	r5, [r6, #12]
 8000f18:	e7da      	b.n	8000ed0 <_vfiprintf_r+0x20>
 8000f1a:	89ab      	ldrh	r3, [r5, #12]
 8000f1c:	0598      	lsls	r0, r3, #22
 8000f1e:	d4ed      	bmi.n	8000efc <_vfiprintf_r+0x4c>
 8000f20:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f22:	f7ff fe5a 	bl	8000bda <__retarget_lock_release_recursive>
 8000f26:	e7e9      	b.n	8000efc <_vfiprintf_r+0x4c>
 8000f28:	2300      	movs	r3, #0
 8000f2a:	9309      	str	r3, [sp, #36]	; 0x24
 8000f2c:	2320      	movs	r3, #32
 8000f2e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000f32:	2330      	movs	r3, #48	; 0x30
 8000f34:	f04f 0901 	mov.w	r9, #1
 8000f38:	f8cd 800c 	str.w	r8, [sp, #12]
 8000f3c:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 80010fc <_vfiprintf_r+0x24c>
 8000f40:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000f44:	4623      	mov	r3, r4
 8000f46:	469a      	mov	sl, r3
 8000f48:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000f4c:	b10a      	cbz	r2, 8000f52 <_vfiprintf_r+0xa2>
 8000f4e:	2a25      	cmp	r2, #37	; 0x25
 8000f50:	d1f9      	bne.n	8000f46 <_vfiprintf_r+0x96>
 8000f52:	ebba 0b04 	subs.w	fp, sl, r4
 8000f56:	d00b      	beq.n	8000f70 <_vfiprintf_r+0xc0>
 8000f58:	465b      	mov	r3, fp
 8000f5a:	4622      	mov	r2, r4
 8000f5c:	4629      	mov	r1, r5
 8000f5e:	4630      	mov	r0, r6
 8000f60:	f7ff ff93 	bl	8000e8a <__sfputs_r>
 8000f64:	3001      	adds	r0, #1
 8000f66:	f000 80aa 	beq.w	80010be <_vfiprintf_r+0x20e>
 8000f6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000f6c:	445a      	add	r2, fp
 8000f6e:	9209      	str	r2, [sp, #36]	; 0x24
 8000f70:	f89a 3000 	ldrb.w	r3, [sl]
 8000f74:	2b00      	cmp	r3, #0
 8000f76:	f000 80a2 	beq.w	80010be <_vfiprintf_r+0x20e>
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000f80:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000f84:	f10a 0a01 	add.w	sl, sl, #1
 8000f88:	9304      	str	r3, [sp, #16]
 8000f8a:	9307      	str	r3, [sp, #28]
 8000f8c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000f90:	931a      	str	r3, [sp, #104]	; 0x68
 8000f92:	4654      	mov	r4, sl
 8000f94:	2205      	movs	r2, #5
 8000f96:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f9a:	4858      	ldr	r0, [pc, #352]	; (80010fc <_vfiprintf_r+0x24c>)
 8000f9c:	f000 faf8 	bl	8001590 <memchr>
 8000fa0:	9a04      	ldr	r2, [sp, #16]
 8000fa2:	b9d8      	cbnz	r0, 8000fdc <_vfiprintf_r+0x12c>
 8000fa4:	06d1      	lsls	r1, r2, #27
 8000fa6:	bf44      	itt	mi
 8000fa8:	2320      	movmi	r3, #32
 8000faa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000fae:	0713      	lsls	r3, r2, #28
 8000fb0:	bf44      	itt	mi
 8000fb2:	232b      	movmi	r3, #43	; 0x2b
 8000fb4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000fb8:	f89a 3000 	ldrb.w	r3, [sl]
 8000fbc:	2b2a      	cmp	r3, #42	; 0x2a
 8000fbe:	d015      	beq.n	8000fec <_vfiprintf_r+0x13c>
 8000fc0:	4654      	mov	r4, sl
 8000fc2:	2000      	movs	r0, #0
 8000fc4:	f04f 0c0a 	mov.w	ip, #10
 8000fc8:	9a07      	ldr	r2, [sp, #28]
 8000fca:	4621      	mov	r1, r4
 8000fcc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000fd0:	3b30      	subs	r3, #48	; 0x30
 8000fd2:	2b09      	cmp	r3, #9
 8000fd4:	d94e      	bls.n	8001074 <_vfiprintf_r+0x1c4>
 8000fd6:	b1b0      	cbz	r0, 8001006 <_vfiprintf_r+0x156>
 8000fd8:	9207      	str	r2, [sp, #28]
 8000fda:	e014      	b.n	8001006 <_vfiprintf_r+0x156>
 8000fdc:	eba0 0308 	sub.w	r3, r0, r8
 8000fe0:	fa09 f303 	lsl.w	r3, r9, r3
 8000fe4:	4313      	orrs	r3, r2
 8000fe6:	46a2      	mov	sl, r4
 8000fe8:	9304      	str	r3, [sp, #16]
 8000fea:	e7d2      	b.n	8000f92 <_vfiprintf_r+0xe2>
 8000fec:	9b03      	ldr	r3, [sp, #12]
 8000fee:	1d19      	adds	r1, r3, #4
 8000ff0:	681b      	ldr	r3, [r3, #0]
 8000ff2:	9103      	str	r1, [sp, #12]
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	bfbb      	ittet	lt
 8000ff8:	425b      	neglt	r3, r3
 8000ffa:	f042 0202 	orrlt.w	r2, r2, #2
 8000ffe:	9307      	strge	r3, [sp, #28]
 8001000:	9307      	strlt	r3, [sp, #28]
 8001002:	bfb8      	it	lt
 8001004:	9204      	strlt	r2, [sp, #16]
 8001006:	7823      	ldrb	r3, [r4, #0]
 8001008:	2b2e      	cmp	r3, #46	; 0x2e
 800100a:	d10c      	bne.n	8001026 <_vfiprintf_r+0x176>
 800100c:	7863      	ldrb	r3, [r4, #1]
 800100e:	2b2a      	cmp	r3, #42	; 0x2a
 8001010:	d135      	bne.n	800107e <_vfiprintf_r+0x1ce>
 8001012:	9b03      	ldr	r3, [sp, #12]
 8001014:	3402      	adds	r4, #2
 8001016:	1d1a      	adds	r2, r3, #4
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	9203      	str	r2, [sp, #12]
 800101c:	2b00      	cmp	r3, #0
 800101e:	bfb8      	it	lt
 8001020:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8001024:	9305      	str	r3, [sp, #20]
 8001026:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8001100 <_vfiprintf_r+0x250>
 800102a:	2203      	movs	r2, #3
 800102c:	4650      	mov	r0, sl
 800102e:	7821      	ldrb	r1, [r4, #0]
 8001030:	f000 faae 	bl	8001590 <memchr>
 8001034:	b140      	cbz	r0, 8001048 <_vfiprintf_r+0x198>
 8001036:	2340      	movs	r3, #64	; 0x40
 8001038:	eba0 000a 	sub.w	r0, r0, sl
 800103c:	fa03 f000 	lsl.w	r0, r3, r0
 8001040:	9b04      	ldr	r3, [sp, #16]
 8001042:	3401      	adds	r4, #1
 8001044:	4303      	orrs	r3, r0
 8001046:	9304      	str	r3, [sp, #16]
 8001048:	f814 1b01 	ldrb.w	r1, [r4], #1
 800104c:	2206      	movs	r2, #6
 800104e:	482d      	ldr	r0, [pc, #180]	; (8001104 <_vfiprintf_r+0x254>)
 8001050:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001054:	f000 fa9c 	bl	8001590 <memchr>
 8001058:	2800      	cmp	r0, #0
 800105a:	d03f      	beq.n	80010dc <_vfiprintf_r+0x22c>
 800105c:	4b2a      	ldr	r3, [pc, #168]	; (8001108 <_vfiprintf_r+0x258>)
 800105e:	bb1b      	cbnz	r3, 80010a8 <_vfiprintf_r+0x1f8>
 8001060:	9b03      	ldr	r3, [sp, #12]
 8001062:	3307      	adds	r3, #7
 8001064:	f023 0307 	bic.w	r3, r3, #7
 8001068:	3308      	adds	r3, #8
 800106a:	9303      	str	r3, [sp, #12]
 800106c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800106e:	443b      	add	r3, r7
 8001070:	9309      	str	r3, [sp, #36]	; 0x24
 8001072:	e767      	b.n	8000f44 <_vfiprintf_r+0x94>
 8001074:	460c      	mov	r4, r1
 8001076:	2001      	movs	r0, #1
 8001078:	fb0c 3202 	mla	r2, ip, r2, r3
 800107c:	e7a5      	b.n	8000fca <_vfiprintf_r+0x11a>
 800107e:	2300      	movs	r3, #0
 8001080:	f04f 0c0a 	mov.w	ip, #10
 8001084:	4619      	mov	r1, r3
 8001086:	3401      	adds	r4, #1
 8001088:	9305      	str	r3, [sp, #20]
 800108a:	4620      	mov	r0, r4
 800108c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001090:	3a30      	subs	r2, #48	; 0x30
 8001092:	2a09      	cmp	r2, #9
 8001094:	d903      	bls.n	800109e <_vfiprintf_r+0x1ee>
 8001096:	2b00      	cmp	r3, #0
 8001098:	d0c5      	beq.n	8001026 <_vfiprintf_r+0x176>
 800109a:	9105      	str	r1, [sp, #20]
 800109c:	e7c3      	b.n	8001026 <_vfiprintf_r+0x176>
 800109e:	4604      	mov	r4, r0
 80010a0:	2301      	movs	r3, #1
 80010a2:	fb0c 2101 	mla	r1, ip, r1, r2
 80010a6:	e7f0      	b.n	800108a <_vfiprintf_r+0x1da>
 80010a8:	ab03      	add	r3, sp, #12
 80010aa:	9300      	str	r3, [sp, #0]
 80010ac:	462a      	mov	r2, r5
 80010ae:	4630      	mov	r0, r6
 80010b0:	4b16      	ldr	r3, [pc, #88]	; (800110c <_vfiprintf_r+0x25c>)
 80010b2:	a904      	add	r1, sp, #16
 80010b4:	f3af 8000 	nop.w
 80010b8:	4607      	mov	r7, r0
 80010ba:	1c78      	adds	r0, r7, #1
 80010bc:	d1d6      	bne.n	800106c <_vfiprintf_r+0x1bc>
 80010be:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80010c0:	07d9      	lsls	r1, r3, #31
 80010c2:	d405      	bmi.n	80010d0 <_vfiprintf_r+0x220>
 80010c4:	89ab      	ldrh	r3, [r5, #12]
 80010c6:	059a      	lsls	r2, r3, #22
 80010c8:	d402      	bmi.n	80010d0 <_vfiprintf_r+0x220>
 80010ca:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80010cc:	f7ff fd85 	bl	8000bda <__retarget_lock_release_recursive>
 80010d0:	89ab      	ldrh	r3, [r5, #12]
 80010d2:	065b      	lsls	r3, r3, #25
 80010d4:	f53f af12 	bmi.w	8000efc <_vfiprintf_r+0x4c>
 80010d8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80010da:	e711      	b.n	8000f00 <_vfiprintf_r+0x50>
 80010dc:	ab03      	add	r3, sp, #12
 80010de:	9300      	str	r3, [sp, #0]
 80010e0:	462a      	mov	r2, r5
 80010e2:	4630      	mov	r0, r6
 80010e4:	4b09      	ldr	r3, [pc, #36]	; (800110c <_vfiprintf_r+0x25c>)
 80010e6:	a904      	add	r1, sp, #16
 80010e8:	f000 f882 	bl	80011f0 <_printf_i>
 80010ec:	e7e4      	b.n	80010b8 <_vfiprintf_r+0x208>
 80010ee:	bf00      	nop
 80010f0:	08001650 	.word	0x08001650
 80010f4:	08001670 	.word	0x08001670
 80010f8:	08001630 	.word	0x08001630
 80010fc:	08001690 	.word	0x08001690
 8001100:	08001696 	.word	0x08001696
 8001104:	0800169a 	.word	0x0800169a
 8001108:	00000000 	.word	0x00000000
 800110c:	08000e8b 	.word	0x08000e8b

08001110 <_printf_common>:
 8001110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001114:	4616      	mov	r6, r2
 8001116:	4699      	mov	r9, r3
 8001118:	688a      	ldr	r2, [r1, #8]
 800111a:	690b      	ldr	r3, [r1, #16]
 800111c:	4607      	mov	r7, r0
 800111e:	4293      	cmp	r3, r2
 8001120:	bfb8      	it	lt
 8001122:	4613      	movlt	r3, r2
 8001124:	6033      	str	r3, [r6, #0]
 8001126:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800112a:	460c      	mov	r4, r1
 800112c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001130:	b10a      	cbz	r2, 8001136 <_printf_common+0x26>
 8001132:	3301      	adds	r3, #1
 8001134:	6033      	str	r3, [r6, #0]
 8001136:	6823      	ldr	r3, [r4, #0]
 8001138:	0699      	lsls	r1, r3, #26
 800113a:	bf42      	ittt	mi
 800113c:	6833      	ldrmi	r3, [r6, #0]
 800113e:	3302      	addmi	r3, #2
 8001140:	6033      	strmi	r3, [r6, #0]
 8001142:	6825      	ldr	r5, [r4, #0]
 8001144:	f015 0506 	ands.w	r5, r5, #6
 8001148:	d106      	bne.n	8001158 <_printf_common+0x48>
 800114a:	f104 0a19 	add.w	sl, r4, #25
 800114e:	68e3      	ldr	r3, [r4, #12]
 8001150:	6832      	ldr	r2, [r6, #0]
 8001152:	1a9b      	subs	r3, r3, r2
 8001154:	42ab      	cmp	r3, r5
 8001156:	dc28      	bgt.n	80011aa <_printf_common+0x9a>
 8001158:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800115c:	1e13      	subs	r3, r2, #0
 800115e:	6822      	ldr	r2, [r4, #0]
 8001160:	bf18      	it	ne
 8001162:	2301      	movne	r3, #1
 8001164:	0692      	lsls	r2, r2, #26
 8001166:	d42d      	bmi.n	80011c4 <_printf_common+0xb4>
 8001168:	4649      	mov	r1, r9
 800116a:	4638      	mov	r0, r7
 800116c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001170:	47c0      	blx	r8
 8001172:	3001      	adds	r0, #1
 8001174:	d020      	beq.n	80011b8 <_printf_common+0xa8>
 8001176:	6823      	ldr	r3, [r4, #0]
 8001178:	68e5      	ldr	r5, [r4, #12]
 800117a:	f003 0306 	and.w	r3, r3, #6
 800117e:	2b04      	cmp	r3, #4
 8001180:	bf18      	it	ne
 8001182:	2500      	movne	r5, #0
 8001184:	6832      	ldr	r2, [r6, #0]
 8001186:	f04f 0600 	mov.w	r6, #0
 800118a:	68a3      	ldr	r3, [r4, #8]
 800118c:	bf08      	it	eq
 800118e:	1aad      	subeq	r5, r5, r2
 8001190:	6922      	ldr	r2, [r4, #16]
 8001192:	bf08      	it	eq
 8001194:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001198:	4293      	cmp	r3, r2
 800119a:	bfc4      	itt	gt
 800119c:	1a9b      	subgt	r3, r3, r2
 800119e:	18ed      	addgt	r5, r5, r3
 80011a0:	341a      	adds	r4, #26
 80011a2:	42b5      	cmp	r5, r6
 80011a4:	d11a      	bne.n	80011dc <_printf_common+0xcc>
 80011a6:	2000      	movs	r0, #0
 80011a8:	e008      	b.n	80011bc <_printf_common+0xac>
 80011aa:	2301      	movs	r3, #1
 80011ac:	4652      	mov	r2, sl
 80011ae:	4649      	mov	r1, r9
 80011b0:	4638      	mov	r0, r7
 80011b2:	47c0      	blx	r8
 80011b4:	3001      	adds	r0, #1
 80011b6:	d103      	bne.n	80011c0 <_printf_common+0xb0>
 80011b8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80011c0:	3501      	adds	r5, #1
 80011c2:	e7c4      	b.n	800114e <_printf_common+0x3e>
 80011c4:	2030      	movs	r0, #48	; 0x30
 80011c6:	18e1      	adds	r1, r4, r3
 80011c8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80011cc:	1c5a      	adds	r2, r3, #1
 80011ce:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80011d2:	4422      	add	r2, r4
 80011d4:	3302      	adds	r3, #2
 80011d6:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80011da:	e7c5      	b.n	8001168 <_printf_common+0x58>
 80011dc:	2301      	movs	r3, #1
 80011de:	4622      	mov	r2, r4
 80011e0:	4649      	mov	r1, r9
 80011e2:	4638      	mov	r0, r7
 80011e4:	47c0      	blx	r8
 80011e6:	3001      	adds	r0, #1
 80011e8:	d0e6      	beq.n	80011b8 <_printf_common+0xa8>
 80011ea:	3601      	adds	r6, #1
 80011ec:	e7d9      	b.n	80011a2 <_printf_common+0x92>
	...

080011f0 <_printf_i>:
 80011f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80011f4:	7e0f      	ldrb	r7, [r1, #24]
 80011f6:	4691      	mov	r9, r2
 80011f8:	2f78      	cmp	r7, #120	; 0x78
 80011fa:	4680      	mov	r8, r0
 80011fc:	460c      	mov	r4, r1
 80011fe:	469a      	mov	sl, r3
 8001200:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001202:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001206:	d807      	bhi.n	8001218 <_printf_i+0x28>
 8001208:	2f62      	cmp	r7, #98	; 0x62
 800120a:	d80a      	bhi.n	8001222 <_printf_i+0x32>
 800120c:	2f00      	cmp	r7, #0
 800120e:	f000 80d9 	beq.w	80013c4 <_printf_i+0x1d4>
 8001212:	2f58      	cmp	r7, #88	; 0x58
 8001214:	f000 80a4 	beq.w	8001360 <_printf_i+0x170>
 8001218:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800121c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001220:	e03a      	b.n	8001298 <_printf_i+0xa8>
 8001222:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001226:	2b15      	cmp	r3, #21
 8001228:	d8f6      	bhi.n	8001218 <_printf_i+0x28>
 800122a:	a101      	add	r1, pc, #4	; (adr r1, 8001230 <_printf_i+0x40>)
 800122c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001230:	08001289 	.word	0x08001289
 8001234:	0800129d 	.word	0x0800129d
 8001238:	08001219 	.word	0x08001219
 800123c:	08001219 	.word	0x08001219
 8001240:	08001219 	.word	0x08001219
 8001244:	08001219 	.word	0x08001219
 8001248:	0800129d 	.word	0x0800129d
 800124c:	08001219 	.word	0x08001219
 8001250:	08001219 	.word	0x08001219
 8001254:	08001219 	.word	0x08001219
 8001258:	08001219 	.word	0x08001219
 800125c:	080013ab 	.word	0x080013ab
 8001260:	080012cd 	.word	0x080012cd
 8001264:	0800138d 	.word	0x0800138d
 8001268:	08001219 	.word	0x08001219
 800126c:	08001219 	.word	0x08001219
 8001270:	080013cd 	.word	0x080013cd
 8001274:	08001219 	.word	0x08001219
 8001278:	080012cd 	.word	0x080012cd
 800127c:	08001219 	.word	0x08001219
 8001280:	08001219 	.word	0x08001219
 8001284:	08001395 	.word	0x08001395
 8001288:	682b      	ldr	r3, [r5, #0]
 800128a:	1d1a      	adds	r2, r3, #4
 800128c:	681b      	ldr	r3, [r3, #0]
 800128e:	602a      	str	r2, [r5, #0]
 8001290:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001294:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001298:	2301      	movs	r3, #1
 800129a:	e0a4      	b.n	80013e6 <_printf_i+0x1f6>
 800129c:	6820      	ldr	r0, [r4, #0]
 800129e:	6829      	ldr	r1, [r5, #0]
 80012a0:	0606      	lsls	r6, r0, #24
 80012a2:	f101 0304 	add.w	r3, r1, #4
 80012a6:	d50a      	bpl.n	80012be <_printf_i+0xce>
 80012a8:	680e      	ldr	r6, [r1, #0]
 80012aa:	602b      	str	r3, [r5, #0]
 80012ac:	2e00      	cmp	r6, #0
 80012ae:	da03      	bge.n	80012b8 <_printf_i+0xc8>
 80012b0:	232d      	movs	r3, #45	; 0x2d
 80012b2:	4276      	negs	r6, r6
 80012b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012b8:	230a      	movs	r3, #10
 80012ba:	485e      	ldr	r0, [pc, #376]	; (8001434 <_printf_i+0x244>)
 80012bc:	e019      	b.n	80012f2 <_printf_i+0x102>
 80012be:	680e      	ldr	r6, [r1, #0]
 80012c0:	f010 0f40 	tst.w	r0, #64	; 0x40
 80012c4:	602b      	str	r3, [r5, #0]
 80012c6:	bf18      	it	ne
 80012c8:	b236      	sxthne	r6, r6
 80012ca:	e7ef      	b.n	80012ac <_printf_i+0xbc>
 80012cc:	682b      	ldr	r3, [r5, #0]
 80012ce:	6820      	ldr	r0, [r4, #0]
 80012d0:	1d19      	adds	r1, r3, #4
 80012d2:	6029      	str	r1, [r5, #0]
 80012d4:	0601      	lsls	r1, r0, #24
 80012d6:	d501      	bpl.n	80012dc <_printf_i+0xec>
 80012d8:	681e      	ldr	r6, [r3, #0]
 80012da:	e002      	b.n	80012e2 <_printf_i+0xf2>
 80012dc:	0646      	lsls	r6, r0, #25
 80012de:	d5fb      	bpl.n	80012d8 <_printf_i+0xe8>
 80012e0:	881e      	ldrh	r6, [r3, #0]
 80012e2:	2f6f      	cmp	r7, #111	; 0x6f
 80012e4:	bf0c      	ite	eq
 80012e6:	2308      	moveq	r3, #8
 80012e8:	230a      	movne	r3, #10
 80012ea:	4852      	ldr	r0, [pc, #328]	; (8001434 <_printf_i+0x244>)
 80012ec:	2100      	movs	r1, #0
 80012ee:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80012f2:	6865      	ldr	r5, [r4, #4]
 80012f4:	2d00      	cmp	r5, #0
 80012f6:	bfa8      	it	ge
 80012f8:	6821      	ldrge	r1, [r4, #0]
 80012fa:	60a5      	str	r5, [r4, #8]
 80012fc:	bfa4      	itt	ge
 80012fe:	f021 0104 	bicge.w	r1, r1, #4
 8001302:	6021      	strge	r1, [r4, #0]
 8001304:	b90e      	cbnz	r6, 800130a <_printf_i+0x11a>
 8001306:	2d00      	cmp	r5, #0
 8001308:	d04d      	beq.n	80013a6 <_printf_i+0x1b6>
 800130a:	4615      	mov	r5, r2
 800130c:	fbb6 f1f3 	udiv	r1, r6, r3
 8001310:	fb03 6711 	mls	r7, r3, r1, r6
 8001314:	5dc7      	ldrb	r7, [r0, r7]
 8001316:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800131a:	4637      	mov	r7, r6
 800131c:	42bb      	cmp	r3, r7
 800131e:	460e      	mov	r6, r1
 8001320:	d9f4      	bls.n	800130c <_printf_i+0x11c>
 8001322:	2b08      	cmp	r3, #8
 8001324:	d10b      	bne.n	800133e <_printf_i+0x14e>
 8001326:	6823      	ldr	r3, [r4, #0]
 8001328:	07de      	lsls	r6, r3, #31
 800132a:	d508      	bpl.n	800133e <_printf_i+0x14e>
 800132c:	6923      	ldr	r3, [r4, #16]
 800132e:	6861      	ldr	r1, [r4, #4]
 8001330:	4299      	cmp	r1, r3
 8001332:	bfde      	ittt	le
 8001334:	2330      	movle	r3, #48	; 0x30
 8001336:	f805 3c01 	strble.w	r3, [r5, #-1]
 800133a:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800133e:	1b52      	subs	r2, r2, r5
 8001340:	6122      	str	r2, [r4, #16]
 8001342:	464b      	mov	r3, r9
 8001344:	4621      	mov	r1, r4
 8001346:	4640      	mov	r0, r8
 8001348:	f8cd a000 	str.w	sl, [sp]
 800134c:	aa03      	add	r2, sp, #12
 800134e:	f7ff fedf 	bl	8001110 <_printf_common>
 8001352:	3001      	adds	r0, #1
 8001354:	d14c      	bne.n	80013f0 <_printf_i+0x200>
 8001356:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800135a:	b004      	add	sp, #16
 800135c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001360:	4834      	ldr	r0, [pc, #208]	; (8001434 <_printf_i+0x244>)
 8001362:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001366:	6829      	ldr	r1, [r5, #0]
 8001368:	6823      	ldr	r3, [r4, #0]
 800136a:	f851 6b04 	ldr.w	r6, [r1], #4
 800136e:	6029      	str	r1, [r5, #0]
 8001370:	061d      	lsls	r5, r3, #24
 8001372:	d514      	bpl.n	800139e <_printf_i+0x1ae>
 8001374:	07df      	lsls	r7, r3, #31
 8001376:	bf44      	itt	mi
 8001378:	f043 0320 	orrmi.w	r3, r3, #32
 800137c:	6023      	strmi	r3, [r4, #0]
 800137e:	b91e      	cbnz	r6, 8001388 <_printf_i+0x198>
 8001380:	6823      	ldr	r3, [r4, #0]
 8001382:	f023 0320 	bic.w	r3, r3, #32
 8001386:	6023      	str	r3, [r4, #0]
 8001388:	2310      	movs	r3, #16
 800138a:	e7af      	b.n	80012ec <_printf_i+0xfc>
 800138c:	6823      	ldr	r3, [r4, #0]
 800138e:	f043 0320 	orr.w	r3, r3, #32
 8001392:	6023      	str	r3, [r4, #0]
 8001394:	2378      	movs	r3, #120	; 0x78
 8001396:	4828      	ldr	r0, [pc, #160]	; (8001438 <_printf_i+0x248>)
 8001398:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800139c:	e7e3      	b.n	8001366 <_printf_i+0x176>
 800139e:	0659      	lsls	r1, r3, #25
 80013a0:	bf48      	it	mi
 80013a2:	b2b6      	uxthmi	r6, r6
 80013a4:	e7e6      	b.n	8001374 <_printf_i+0x184>
 80013a6:	4615      	mov	r5, r2
 80013a8:	e7bb      	b.n	8001322 <_printf_i+0x132>
 80013aa:	682b      	ldr	r3, [r5, #0]
 80013ac:	6826      	ldr	r6, [r4, #0]
 80013ae:	1d18      	adds	r0, r3, #4
 80013b0:	6961      	ldr	r1, [r4, #20]
 80013b2:	6028      	str	r0, [r5, #0]
 80013b4:	0635      	lsls	r5, r6, #24
 80013b6:	681b      	ldr	r3, [r3, #0]
 80013b8:	d501      	bpl.n	80013be <_printf_i+0x1ce>
 80013ba:	6019      	str	r1, [r3, #0]
 80013bc:	e002      	b.n	80013c4 <_printf_i+0x1d4>
 80013be:	0670      	lsls	r0, r6, #25
 80013c0:	d5fb      	bpl.n	80013ba <_printf_i+0x1ca>
 80013c2:	8019      	strh	r1, [r3, #0]
 80013c4:	2300      	movs	r3, #0
 80013c6:	4615      	mov	r5, r2
 80013c8:	6123      	str	r3, [r4, #16]
 80013ca:	e7ba      	b.n	8001342 <_printf_i+0x152>
 80013cc:	682b      	ldr	r3, [r5, #0]
 80013ce:	2100      	movs	r1, #0
 80013d0:	1d1a      	adds	r2, r3, #4
 80013d2:	602a      	str	r2, [r5, #0]
 80013d4:	681d      	ldr	r5, [r3, #0]
 80013d6:	6862      	ldr	r2, [r4, #4]
 80013d8:	4628      	mov	r0, r5
 80013da:	f000 f8d9 	bl	8001590 <memchr>
 80013de:	b108      	cbz	r0, 80013e4 <_printf_i+0x1f4>
 80013e0:	1b40      	subs	r0, r0, r5
 80013e2:	6060      	str	r0, [r4, #4]
 80013e4:	6863      	ldr	r3, [r4, #4]
 80013e6:	6123      	str	r3, [r4, #16]
 80013e8:	2300      	movs	r3, #0
 80013ea:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80013ee:	e7a8      	b.n	8001342 <_printf_i+0x152>
 80013f0:	462a      	mov	r2, r5
 80013f2:	4649      	mov	r1, r9
 80013f4:	4640      	mov	r0, r8
 80013f6:	6923      	ldr	r3, [r4, #16]
 80013f8:	47d0      	blx	sl
 80013fa:	3001      	adds	r0, #1
 80013fc:	d0ab      	beq.n	8001356 <_printf_i+0x166>
 80013fe:	6823      	ldr	r3, [r4, #0]
 8001400:	079b      	lsls	r3, r3, #30
 8001402:	d413      	bmi.n	800142c <_printf_i+0x23c>
 8001404:	68e0      	ldr	r0, [r4, #12]
 8001406:	9b03      	ldr	r3, [sp, #12]
 8001408:	4298      	cmp	r0, r3
 800140a:	bfb8      	it	lt
 800140c:	4618      	movlt	r0, r3
 800140e:	e7a4      	b.n	800135a <_printf_i+0x16a>
 8001410:	2301      	movs	r3, #1
 8001412:	4632      	mov	r2, r6
 8001414:	4649      	mov	r1, r9
 8001416:	4640      	mov	r0, r8
 8001418:	47d0      	blx	sl
 800141a:	3001      	adds	r0, #1
 800141c:	d09b      	beq.n	8001356 <_printf_i+0x166>
 800141e:	3501      	adds	r5, #1
 8001420:	68e3      	ldr	r3, [r4, #12]
 8001422:	9903      	ldr	r1, [sp, #12]
 8001424:	1a5b      	subs	r3, r3, r1
 8001426:	42ab      	cmp	r3, r5
 8001428:	dcf2      	bgt.n	8001410 <_printf_i+0x220>
 800142a:	e7eb      	b.n	8001404 <_printf_i+0x214>
 800142c:	2500      	movs	r5, #0
 800142e:	f104 0619 	add.w	r6, r4, #25
 8001432:	e7f5      	b.n	8001420 <_printf_i+0x230>
 8001434:	080016a1 	.word	0x080016a1
 8001438:	080016b2 	.word	0x080016b2

0800143c <_sbrk_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	2300      	movs	r3, #0
 8001440:	4d05      	ldr	r5, [pc, #20]	; (8001458 <_sbrk_r+0x1c>)
 8001442:	4604      	mov	r4, r0
 8001444:	4608      	mov	r0, r1
 8001446:	602b      	str	r3, [r5, #0]
 8001448:	f7fe ffa2 	bl	8000390 <_sbrk>
 800144c:	1c43      	adds	r3, r0, #1
 800144e:	d102      	bne.n	8001456 <_sbrk_r+0x1a>
 8001450:	682b      	ldr	r3, [r5, #0]
 8001452:	b103      	cbz	r3, 8001456 <_sbrk_r+0x1a>
 8001454:	6023      	str	r3, [r4, #0]
 8001456:	bd38      	pop	{r3, r4, r5, pc}
 8001458:	20000094 	.word	0x20000094

0800145c <__sread>:
 800145c:	b510      	push	{r4, lr}
 800145e:	460c      	mov	r4, r1
 8001460:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001464:	f000 f8ae 	bl	80015c4 <_read_r>
 8001468:	2800      	cmp	r0, #0
 800146a:	bfab      	itete	ge
 800146c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800146e:	89a3      	ldrhlt	r3, [r4, #12]
 8001470:	181b      	addge	r3, r3, r0
 8001472:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001476:	bfac      	ite	ge
 8001478:	6563      	strge	r3, [r4, #84]	; 0x54
 800147a:	81a3      	strhlt	r3, [r4, #12]
 800147c:	bd10      	pop	{r4, pc}

0800147e <__swrite>:
 800147e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001482:	461f      	mov	r7, r3
 8001484:	898b      	ldrh	r3, [r1, #12]
 8001486:	4605      	mov	r5, r0
 8001488:	05db      	lsls	r3, r3, #23
 800148a:	460c      	mov	r4, r1
 800148c:	4616      	mov	r6, r2
 800148e:	d505      	bpl.n	800149c <__swrite+0x1e>
 8001490:	2302      	movs	r3, #2
 8001492:	2200      	movs	r2, #0
 8001494:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001498:	f000 f868 	bl	800156c <_lseek_r>
 800149c:	89a3      	ldrh	r3, [r4, #12]
 800149e:	4632      	mov	r2, r6
 80014a0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80014a4:	81a3      	strh	r3, [r4, #12]
 80014a6:	4628      	mov	r0, r5
 80014a8:	463b      	mov	r3, r7
 80014aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80014b2:	f000 b817 	b.w	80014e4 <_write_r>

080014b6 <__sseek>:
 80014b6:	b510      	push	{r4, lr}
 80014b8:	460c      	mov	r4, r1
 80014ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014be:	f000 f855 	bl	800156c <_lseek_r>
 80014c2:	1c43      	adds	r3, r0, #1
 80014c4:	89a3      	ldrh	r3, [r4, #12]
 80014c6:	bf15      	itete	ne
 80014c8:	6560      	strne	r0, [r4, #84]	; 0x54
 80014ca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80014ce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80014d2:	81a3      	strheq	r3, [r4, #12]
 80014d4:	bf18      	it	ne
 80014d6:	81a3      	strhne	r3, [r4, #12]
 80014d8:	bd10      	pop	{r4, pc}

080014da <__sclose>:
 80014da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014de:	f000 b813 	b.w	8001508 <_close_r>
	...

080014e4 <_write_r>:
 80014e4:	b538      	push	{r3, r4, r5, lr}
 80014e6:	4604      	mov	r4, r0
 80014e8:	4608      	mov	r0, r1
 80014ea:	4611      	mov	r1, r2
 80014ec:	2200      	movs	r2, #0
 80014ee:	4d05      	ldr	r5, [pc, #20]	; (8001504 <_write_r+0x20>)
 80014f0:	602a      	str	r2, [r5, #0]
 80014f2:	461a      	mov	r2, r3
 80014f4:	f7fe feff 	bl	80002f6 <_write>
 80014f8:	1c43      	adds	r3, r0, #1
 80014fa:	d102      	bne.n	8001502 <_write_r+0x1e>
 80014fc:	682b      	ldr	r3, [r5, #0]
 80014fe:	b103      	cbz	r3, 8001502 <_write_r+0x1e>
 8001500:	6023      	str	r3, [r4, #0]
 8001502:	bd38      	pop	{r3, r4, r5, pc}
 8001504:	20000094 	.word	0x20000094

08001508 <_close_r>:
 8001508:	b538      	push	{r3, r4, r5, lr}
 800150a:	2300      	movs	r3, #0
 800150c:	4d05      	ldr	r5, [pc, #20]	; (8001524 <_close_r+0x1c>)
 800150e:	4604      	mov	r4, r0
 8001510:	4608      	mov	r0, r1
 8001512:	602b      	str	r3, [r5, #0]
 8001514:	f7fe ff0b 	bl	800032e <_close>
 8001518:	1c43      	adds	r3, r0, #1
 800151a:	d102      	bne.n	8001522 <_close_r+0x1a>
 800151c:	682b      	ldr	r3, [r5, #0]
 800151e:	b103      	cbz	r3, 8001522 <_close_r+0x1a>
 8001520:	6023      	str	r3, [r4, #0]
 8001522:	bd38      	pop	{r3, r4, r5, pc}
 8001524:	20000094 	.word	0x20000094

08001528 <_fstat_r>:
 8001528:	b538      	push	{r3, r4, r5, lr}
 800152a:	2300      	movs	r3, #0
 800152c:	4d06      	ldr	r5, [pc, #24]	; (8001548 <_fstat_r+0x20>)
 800152e:	4604      	mov	r4, r0
 8001530:	4608      	mov	r0, r1
 8001532:	4611      	mov	r1, r2
 8001534:	602b      	str	r3, [r5, #0]
 8001536:	f7fe ff05 	bl	8000344 <_fstat>
 800153a:	1c43      	adds	r3, r0, #1
 800153c:	d102      	bne.n	8001544 <_fstat_r+0x1c>
 800153e:	682b      	ldr	r3, [r5, #0]
 8001540:	b103      	cbz	r3, 8001544 <_fstat_r+0x1c>
 8001542:	6023      	str	r3, [r4, #0]
 8001544:	bd38      	pop	{r3, r4, r5, pc}
 8001546:	bf00      	nop
 8001548:	20000094 	.word	0x20000094

0800154c <_isatty_r>:
 800154c:	b538      	push	{r3, r4, r5, lr}
 800154e:	2300      	movs	r3, #0
 8001550:	4d05      	ldr	r5, [pc, #20]	; (8001568 <_isatty_r+0x1c>)
 8001552:	4604      	mov	r4, r0
 8001554:	4608      	mov	r0, r1
 8001556:	602b      	str	r3, [r5, #0]
 8001558:	f7fe ff03 	bl	8000362 <_isatty>
 800155c:	1c43      	adds	r3, r0, #1
 800155e:	d102      	bne.n	8001566 <_isatty_r+0x1a>
 8001560:	682b      	ldr	r3, [r5, #0]
 8001562:	b103      	cbz	r3, 8001566 <_isatty_r+0x1a>
 8001564:	6023      	str	r3, [r4, #0]
 8001566:	bd38      	pop	{r3, r4, r5, pc}
 8001568:	20000094 	.word	0x20000094

0800156c <_lseek_r>:
 800156c:	b538      	push	{r3, r4, r5, lr}
 800156e:	4604      	mov	r4, r0
 8001570:	4608      	mov	r0, r1
 8001572:	4611      	mov	r1, r2
 8001574:	2200      	movs	r2, #0
 8001576:	4d05      	ldr	r5, [pc, #20]	; (800158c <_lseek_r+0x20>)
 8001578:	602a      	str	r2, [r5, #0]
 800157a:	461a      	mov	r2, r3
 800157c:	f7fe fefb 	bl	8000376 <_lseek>
 8001580:	1c43      	adds	r3, r0, #1
 8001582:	d102      	bne.n	800158a <_lseek_r+0x1e>
 8001584:	682b      	ldr	r3, [r5, #0]
 8001586:	b103      	cbz	r3, 800158a <_lseek_r+0x1e>
 8001588:	6023      	str	r3, [r4, #0]
 800158a:	bd38      	pop	{r3, r4, r5, pc}
 800158c:	20000094 	.word	0x20000094

08001590 <memchr>:
 8001590:	4603      	mov	r3, r0
 8001592:	b510      	push	{r4, lr}
 8001594:	b2c9      	uxtb	r1, r1
 8001596:	4402      	add	r2, r0
 8001598:	4293      	cmp	r3, r2
 800159a:	4618      	mov	r0, r3
 800159c:	d101      	bne.n	80015a2 <memchr+0x12>
 800159e:	2000      	movs	r0, #0
 80015a0:	e003      	b.n	80015aa <memchr+0x1a>
 80015a2:	7804      	ldrb	r4, [r0, #0]
 80015a4:	3301      	adds	r3, #1
 80015a6:	428c      	cmp	r4, r1
 80015a8:	d1f6      	bne.n	8001598 <memchr+0x8>
 80015aa:	bd10      	pop	{r4, pc}

080015ac <__malloc_lock>:
 80015ac:	4801      	ldr	r0, [pc, #4]	; (80015b4 <__malloc_lock+0x8>)
 80015ae:	f7ff bb13 	b.w	8000bd8 <__retarget_lock_acquire_recursive>
 80015b2:	bf00      	nop
 80015b4:	20000088 	.word	0x20000088

080015b8 <__malloc_unlock>:
 80015b8:	4801      	ldr	r0, [pc, #4]	; (80015c0 <__malloc_unlock+0x8>)
 80015ba:	f7ff bb0e 	b.w	8000bda <__retarget_lock_release_recursive>
 80015be:	bf00      	nop
 80015c0:	20000088 	.word	0x20000088

080015c4 <_read_r>:
 80015c4:	b538      	push	{r3, r4, r5, lr}
 80015c6:	4604      	mov	r4, r0
 80015c8:	4608      	mov	r0, r1
 80015ca:	4611      	mov	r1, r2
 80015cc:	2200      	movs	r2, #0
 80015ce:	4d05      	ldr	r5, [pc, #20]	; (80015e4 <_read_r+0x20>)
 80015d0:	602a      	str	r2, [r5, #0]
 80015d2:	461a      	mov	r2, r3
 80015d4:	f7fe fe72 	bl	80002bc <_read>
 80015d8:	1c43      	adds	r3, r0, #1
 80015da:	d102      	bne.n	80015e2 <_read_r+0x1e>
 80015dc:	682b      	ldr	r3, [r5, #0]
 80015de:	b103      	cbz	r3, 80015e2 <_read_r+0x1e>
 80015e0:	6023      	str	r3, [r4, #0]
 80015e2:	bd38      	pop	{r3, r4, r5, pc}
 80015e4:	20000094 	.word	0x20000094

080015e8 <_init>:
 80015e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ea:	bf00      	nop
 80015ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015ee:	bc08      	pop	{r3}
 80015f0:	469e      	mov	lr, r3
 80015f2:	4770      	bx	lr

080015f4 <_fini>:
 80015f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015f6:	bf00      	nop
 80015f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015fa:	bc08      	pop	{r3}
 80015fc:	469e      	mov	lr, r3
 80015fe:	4770      	bx	lr
